{"version":3,"sources":["utils/memoryUtils.js","config/menuConfig.js","api/ajax.js","api/index.js","utils/storageUtiles.js","redux/actions.js","redux/action-types.js","components/left-nav/left-nav.jsx","utils/dateUtils.js","components/link-button/index.js","components/header/header.jsx","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-form.js","pages/category/update-form.js","pages/category/category.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/chars/bar.jsx","pages/chars/line.jsx","pages/chars/pie.jsx","pages/product/home.jsx","utils/constant.js","pages/product/Pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/datail.jsx","pages/product/product.jsx","pages/admin/admin.jsx","pages/login/login.jsx","App.js","redux/reducer.js","redux/store.js","index.js","assets/images/logo.png"],"names":["user","menuList","title","key","icon","isPublic","children","ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqAddUser","reqWeather","city","jsonp","err","status","results","weather_data","dayPictureUrl","weather","reqCategorys","parentId","reqAddCategorys","categoryName","reqUpdateCategorys","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqCategory","reqUpdateStatus","productId","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqUpdateRole","role","reqGetUsers","reqDeleUser","userId","store","set","remove","receiveUser","SubMenu","LeftNav","state","collapsed","getMenuNodes_map","map","item","getMenuNodes","Item","to","hasAuth","memoryUtils","menus","indexOf","find","child","path","props","location","pathname","reduce","pre","cItem","openKey","push","setHeaderTitle","onClick","this","menuNodes","className","style","marginLeft","mode","theme","selectedKeys","defaultOpenKeys","React","Component","connect","headTitle","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","HeaderContent","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","a","getTitle","forEach","Logout","confirm","content","onOk","console","log","storageUtiles","history","replace","clearInterval","alt","src","Line","dv","DataSet","createView","source","month","b","c","transform","fields","value","float","width","height","scale","range","forceFit","label","formatter","val","crosshairs","position","size","color","shape","stroke","lineWidth","Bar","year","sales","tickInterval","RangePicker","Home","isVisited","handleChange","extra","headStyle","suffix","fontWeight","valueStyle","fontSize","prefix","defaultValue","moment","format","bodyStyle","padding","Option","AddForm","form","setForm","getFieldDecorator","categorys","initialValue","placeholder","create","UpdateForm","rules","required","Category","loading","parentName","subCategorys","showStatus","initColumns","columns","dataIndex","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","result","showAdd","addCategory","getFieldsValue","resetFields","updateCategory","validateFields","handleCancel","rowKey","bordered","dataSource","pagination","defaultPageSize","visible","onCancel","labelCol","span","wrapperCol","TreeNode","AuthForm","getTreeNodes","onCheck","checkedKeys","getMenus","treeNodes","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","creat_time","addRole","values","roleName","success","updateRole","auth","current","auth_name","auth_time","handleCancelAuth","onRow","event","createRef","rowSelection","selectedRowKeys","onSelect","loadding","ref","UserForm","phone","email","role_id","PureComponent","User","users","isShow","deleteUser","addOrUpdateUser","isshow","static","getUsers","initRoleNames","roleNames","update","sale","getOption","stores","text","tooltip","legend","xAxis","yAxis","series","option","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","min","max","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length","length2","animationType","animationEasing","animationDelay","idx","Math","random","ProductHome","products","total","price","updateStatus","getProducts","list","onChange","margin","target","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","getImgs","fileList","previewVisible","handlePreview","preview","originFileObj","previewImage","imgs","img","index","uid","uploadButton","accept","action","listType","onPreview","footer","protypes","PropTypes","array","RichTextEditor","editorState","EditorState","createEmpty","uploadImageCallback","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","getDetail","draftToHtml","convertToRaw","getCurrentContent","onEditorStateChange","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","submit","desc","categoryIds","pCategoryId","pw","editor","isUpdate","goBack","validattorPrice","rule","callback","getCategory","initOptions","catagerys","isLeaf","childOptions","loadData","selectedOptions","targetOption","subCategory","autoSize","minRows","validator","addonAfter","changeOnSelect","ProductDetail","cName1","cName2","result1","all","getCategoryInfo","marginRight","dangerouslySetInnerHTML","__html","Product","exact","component","Footer","Sider","Content","Admin","textAlign","Login","handleSubmit","e","preventDefault","login","stateus","validatorPwd","logo","onSubmit","valuePropName","href","htmlType","WrappedNormalLoginForm","dispatch","msg","errorMsg","App","initUser","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bdb65630.chunk.js","sourcesContent":["export default {\n    user:{},\n}","const menuList = [\n    {\n        title: '首页', // 菜单标题名称\n        key: '/home', // 对应的path\n        icon: 'home', // 图标名称\n        isPublic: true, // 公开的\n    },\n    {\n        title: '商品',\n        key: '/products',\n        icon: 'appstore',\n        children: [ // 子菜单列表\n            {\n                title: '品类管理',\n                key: '/category',\n                icon: 'bars'\n            },\n            {\n                title: '商品管理',\n                key: '/product',\n                icon: 'tool'\n            },\n        ]\n    },\n\n    {\n        title: '用户管理',\n        key: '/user',\n        icon: 'user'\n    },\n    {\n        title: '角色管理',\n        key: '/role',\n        icon: 'safety',\n    },\n\n    {\n        title: '图形图表',\n        key: '/charts',\n        icon: 'area-chart',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar',\n                icon: 'bar-chart'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line',\n                icon: 'line-chart'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie',\n                icon: 'pie-chart'\n            },\n        ]\n    },\n\n    {\n        title: '订单管理',\n        key: '/order',\n        icon: 'windows',\n    },\n]\n\nexport default menuList","import axios from \"axios\"\nimport {message} from \"antd\"\n\nexport default function ajax(url, data={},type=\"GET\"){\n    let promise;\n    return new Promise((resolve,reject)=>{\n        if(type === \"GET\"){\n            promise =  axios.get(url,{\n                params: data\n            });\n        }else{\n            promise = axios.post(url,data);\n        }\n        promise.then(response=>{\n            resolve(response)\n        }).catch(error=>{\n            message.error(\"请求出错了\")\n        })\n    });\n}","import ajax from \"./ajax\";\nimport jsonp from \"jsonp\"\nimport {message} from \"antd\"\n\n\nexport const reqLogin = (username,password) =>\n        ajax(\"/users\",{username,password},\"POST\")\n\nexport const reqAddUser = (user) => ajax(\"/users/add\",user,\"POST\")\n\nexport const reqWeather = (city) =>{\n    return new Promise((resolve ,reject)=>{\n        const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\n        jsonp(url,{},(err,data)=>{\n            if(!err && data.status==='success'){\n                const {dayPictureUrl,weather} = data.results[0].weather_data[0];\n                resolve({dayPictureUrl,weather})\n            }else{\n                message.error('获取天气信息失败')\n            }\n        })\n    })\n}\n\nexport const reqCategorys = (parentId) =>ajax(\"/users/categorys\",{parentId},\"GET\")\n\nexport const reqAddCategorys = (categoryName,parentId) =>ajax(\"/users/addcategorys\",{categoryName,parentId},\"POST\")\n\nexport const reqUpdateCategorys = (categoryId,categoryName) =>ajax(\"/users/updatecategorys\",{categoryId,categoryName},\"POST\")\n\nexport const reqProducts = (pageNum,pageSize) =>ajax(\"/users/productslist\",{pageNum,pageSize})\n\nexport const reqSearchProducts = ({pageNum,pageSize,searchName,searchType}) =>ajax(\"/users/productsearch\",{pageNum,pageSize,[searchType]:searchName})\n\nexport const reqCategory = (categoryId) =>ajax(\"/users/categoryinfo\",{categoryId})\n\nexport const reqUpdateStatus = (productId,status) =>ajax(\"/users/updatestatus\",{productId,status},\"POST\")\n\nexport const reqDeleteImg = (name) =>ajax(\"/users/deleteimg\",{name},\"POST\")\n\nexport const reqAddOrUpdateProduct = (product) => ajax(\"/users/product\"+(product._id?'update':'add'),product,\"POST\")\n\nexport const reqUpdateRole = (role) => ajax(\"/users/updaterole\",role,\"POST\")\n\nexport const reqGetUsers = () =>ajax(\"/users/getAll\")\n\nexport const reqDeleUser = (userId) =>ajax(\"/user/delete\",{userId},\"POST\")\n\n\n","import store from \"store\"\nconst USER_KEY = 'user_key'\n\nexport default {\n    saveUser(user){\n       //localStorage.setItem(USER_KEY,JSON.stringify(user))\n        store.set(USER_KEY,user)\n    },\n\n    getUser(){\n        return store.get(USER_KEY) || {}\n    },\n\n    removeUser(){\n        store.remove(USER_KEY)\n    }\n}","import {SET_HEAD_TITLE,RECEIVE_USER,SHOW_ERROR_MSG} from \"./action-types\";\nimport {reqLogin} from \"../api\";\nimport storageUtiles from \"../utils/storageUtiles\"\n\nexport const setHeaderTitle = (headTitle) =>({type:SET_HEAD_TITLE,data:headTitle})\n\nexport const receiveUser = (user) => ({type:RECEIVE_USER,user})\n\nexport const showErrorMsg = (errorMsg) => ({type:SHOW_ERROR_MSG,errorMsg})\n\nexport const login = (username,password) => {\n    return async dispatch=>{\n        const result = await reqLogin(username,password)\n        if(result.data.status === 0) {\n            const user = result.data.user\n            storageUtiles.saveUser(user)\n            dispatch(receiveUser(user))\n        }else{\n            const msg = result.data.msg\n            dispatch(showErrorMsg(msg))\n        }\n\n    }\n}","export const SET_HEAD_TITLE = 'set_head_title'\nexport const RECEIVE_USER = 'recerive_user'\nexport const SHOW_ERROR_MSG = \"show_error_msg\"","import React from 'react'\nimport \"./index.less\"\nimport {Link,withRouter} from \"react-router-dom\"\nimport { Menu, Icon } from 'antd';\nimport menuList from '../../config/menuConfig'\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport {connect} from \"react-redux\"\nimport {setHeaderTitle} from \"../../redux/actions\"\n\nconst { SubMenu } = Menu;\n\n\n\nclass LeftNav extends React.Component{\n    state = {\n        collapsed: false,\n    };\n\n\n    //示例 使用map方法生成条目\n    getMenuNodes_map = (menuList) => {\n        return menuList.map(item=>{\n            if(!item.children){\n                return (\n                    <Menu.Item key={item.key}>\n                        <Link to={item.key}>\n                            <Icon type={item.icon} />\n                           <span>{item.title}</span>\n                        </Link>\n                    </Menu.Item>\n                )\n            }else{\n                return (\n                    <SubMenu\n                    key={item.key}\n                    title={\n                        <span>\n                            <Icon type={item.icon} />\n                            <span>{item.title}</span>\n                        </span>\n                    }>\n                       {this.getMenuNodes(item.children)}\n                    </SubMenu>\n\n                )\n            }\n        })\n    }\n\n    hasAuth = (item) =>{\n        const {key,isPublic} = item\n        const username = memoryUtils.user.username\n        const {menus} = memoryUtils.user.role\n        if(username ==='crc' || isPublic || menus.indexOf(key) !== -1 ){\n            return true\n        }else if(item.children){\n            return !!item.children.find(child=> menus.indexOf(child.key)!==-1)\n        }\n\n    }\n\n    getMenuNodes =(menuList) =>{\n        const path = this.props.location.pathname\n        return menuList.reduce((pre,item)=>{\n            if(this.hasAuth(item)) {\n                if (!item.children) {\n                    if(item.key === path || path.indexOf(item.key)===0){\n                        this.props.setHeaderTitle(item.title)\n                    }\n                    pre.push((<Menu.Item key={item.key}>\n                        <Link to={item.key} onClick={()=>this.props.setHeaderTitle(item.title)}>\n                            <Icon type={item.icon}/>\n                            <span>{item.title}</span>\n                        </Link>\n                    </Menu.Item>))\n                } else {\n                    const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\n                    // 如果存在, 说明当前item的子列表需要打开\n                    if (cItem) {\n                        this.openKey = item.key\n                    }\n                    pre.push((<SubMenu\n                        key={item.key}\n                        title={\n                            <span>\n                            <Icon type={item.icon}/>\n                            <span>{item.title}</span>\n                        </span>\n                        }>\n                        {this.getMenuNodes(item.children)}\n                    </SubMenu>))\n                }\n            }\n            return pre;\n        },[])\n    }\n\n    //第一次render之前 只执行一次\n    componentWillMount(){\n        this.menuNodes = this.getMenuNodes(menuList);\n    }\n    render() {\n        let path = this.props.location.pathname;\n        const openKey = this.openKey\n        if(path.indexOf('/product')===0){\n            path = \"/product\"\n        }\n        return (\n            <div   className=\"left-nav\">\n                <Link to=\"/\" className=\"left-nav-header\">\n                    <h1 style={{marginLeft:\"30px\"}}>React后台</h1>\n                </Link>\n                <Menu\n                    mode=\"inline\"\n                    theme=\"dark\"\n                    selectedKeys={[path]}\n                    defaultOpenKeys={[openKey]}\n                >\n                    {\n                        this.menuNodes\n                    }\n                </Menu>\n                {/*<Menu*/}\n                {/*    defaultSelectedKeys={['1']}*/}\n                {/*    defaultOpenKeys={['sub1']}*/}\n                {/*    mode=\"inline\"*/}\n                {/*    theme=\"dark\"*/}\n                {/*>*/}\n                {/*    <Menu.Item key=\"/home\">*/}\n                {/*            <Link to=\"/home\">*/}\n                {/*                <Icon type=\"pie-chart\" />*/}\n                {/*                <span>首页</span>*/}\n                {/*            </Link>*/}\n                {/*    </Menu.Item>*/}\n                {/*    <SubMenu*/}\n                {/*        key=\"sub1\"*/}\n                {/*        title={*/}\n                {/*            <span>*/}\n                {/*                <Icon type=\"mail\" />*/}\n                {/*                <span>商品</span>*/}\n                {/*            </span>*/}\n                {/*            }*/}\n                {/*        >*/}\n                {/*        <Menu.Item key=\"/category\">*/}\n                {/*            <Link to=\"/category\">*/}\n                {/*                <Icon type=\"mail\" />*/}\n                {/*                <span>品类管理</span>*/}\n                {/*            </Link>*/}\n                {/*        </Menu.Item>*/}\n                {/*        <Menu.Item key=\"/product\">*/}\n                {/*            <Link to=\"/product\">*/}\n                {/*                <Icon type=\"mail\" />*/}\n                {/*                <span>商品管理</span>*/}\n                {/*            </Link>*/}\n                {/*        </Menu.Item>*/}\n                {/*    </SubMenu>*/}\n                {/*    <Menu.Item key=\"/user\">*/}\n                {/*        <Link to=\"/user\">*/}\n                {/*            <Icon type=\"pie-chart\" />*/}\n                {/*            <span>用户管理</span>*/}\n                {/*        </Link>*/}\n                {/*    </Menu.Item>*/}\n                {/*    <Menu.Item key=\"/role\">*/}\n                {/*        <Link to=\"/role\">*/}\n                {/*            <Icon type=\"pie-chart\" />*/}\n                {/*            <span>角色管理</span>*/}\n                {/*        </Link>*/}\n                {/*    </Menu.Item>*/}\n\n                {/*</Menu>*/}\n            </div>\n        )\n    }\n}\n//leftNav是非路由组件 withRouter传入location history match 属性\nexport default connect(state=>({}),{setHeaderTitle})(withRouter(LeftNav))","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React from \"react\";\nimport \"./index.less\"\n\n\nexport default function LinkButton(props){\n    return <button {...props} className=\"link-button\"></button>\n}","import React from 'react'\nimport \"./index.less\"\nimport {formateDate} from \"../../utils/dateUtils\"\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtiles from \"../../utils/storageUtiles\";\nimport {reqWeather} from \"../../api\";\nimport {withRouter} from 'react-router-dom'\nimport menuList from \"../../config/menuConfig\";\nimport { Modal} from 'antd';\nimport LinkButton from \"../link-button\";\nimport {connect} from \"react-redux\"\n\nclass HeaderContent extends React.Component{\n    state = {\n        currentTime:formateDate(Date.now()),\n        dayPictureUrl:'',\n        weather:''\n    }\n\n    getTime=()=>{\n        this.intervalId = setInterval(()=>{\n            const currentTime = formateDate(Date.now())\n            this.setState({currentTime})\n        },1000)\n    }\n\n    getWeather = async() => {\n        const {dayPictureUrl,weather} = await reqWeather('西安')\n        this.setState({dayPictureUrl,weather})\n    }\n\n    getTitle = () =>{\n        let title;\n        const path = this.props.location.pathname\n        menuList.forEach(item=>{\n            if(item.key===path){\n               title = item.title\n            }else if(item.children){\n                const cItem = item.children.find(cItem=>path.indexOf(cItem.key)===0);\n                if(cItem){\n                    title = cItem.title;\n                }\n            }\n        })\n        return title;\n    }\n\n    Logout= () =>{\n        Modal.confirm({\n            content: '确定退出吗？',\n            onOk : () => {\n                console.log('OK');\n                storageUtiles.removeUser();\n                memoryUtils.user = {};\n                this.props.history.replace('/login')\n            },\n\n        })\n    }\n\n    componentDidMount() {\n        this.getTime();\n        this.getWeather()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n    render() {\n        const {currentTime,dayPictureUrl,weather} = this.state\n        const user = memoryUtils.user.username;\n        //const title = this.getTitle();\n        const title = this.props.headTitle\n        return (\n            <div className=\"header\">\n               <div className=\"header-top\">\n                   <span>欢迎，{user}</span>\n                   <LinkButton onClick={this.Logout}>退出</LinkButton>\n               </div>\n                <div className=\"header-bottom\">\n                    <div className=\"header-bottom-left\">{title}</div>\n                    <div className=\"header-bottom-right\">\n                        <span>{currentTime}</span>\n                        <img alt=\"daypicture\" src={dayPictureUrl} />\n                        <span>{weather}</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default  connect(\n    state=>({headTitle:state.headTitle}),{}\n)(withRouter(HeaderContent))","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Icon,\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n\r\n  render() {\r\n    const {isVisited} = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <Line/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\nimport {Form,Select,Input} from \"antd\"\nimport PropTypes from \"prop-types\"\nimport category from \"./category\";\n\nconst Item = Form.Item;\nconst Option = Select.Option;\nclass AddForm extends React.Component{\n\n    static propTypes = {\n        setForm:PropTypes.func.isRequired,\n        categorys : PropTypes.array.isRequired,\n        parentId:PropTypes.string.isRequired\n    }\n\n    componentWillMount() {\n        console.log(222);\n        console.log(this.props.form)\n        this.props.setForm(this.props.form)\n    }\n\n    render(){\n        const {getFieldDecorator} = this.props.form\n        const {categorys,parentId} = this.props\n        return (\n            <Form>\n                <Item>\n                    {\n                        getFieldDecorator('parentId',{\n                        initialValue:parentId\n                    })(\n                        <Select>\n                            <Option value='0'>一级分类</Option>\n                            {\n                                categorys.map(c=><Option value={c._id}>{c.name}</Option>)\n                            }\n                        </Select>\n                    )}\n\n                </Item>\n                <Item>\n                    {\n                        getFieldDecorator('categoryName',{\n                        initialValue:''\n                    })(\n                        <Input placeholder=\"请输入分类名称\" />\n                    )\n                    }\n\n                </Item>\n\n            </Form>\n        )\n    }\n}\nexport default Form.create()(AddForm)","import React from \"react\";\nimport {Form,Select,Input} from \"antd\"\nimport PropTypes from \"prop-types\"\nconst Item = Form.Item;\nclass UpdateForm extends React.Component{\n\n    static propTypes = {\n        categoryName:PropTypes.string.isRequired,\n        setForm:PropTypes.func.isRequired\n    }\n\n    componentWillMount() {\n        console.log(222);\n        console.log(this.props.form)\n        this.props.setForm(this.props.form)\n    }\n\n    render(){\n        const {categoryName} = this.props\n        const {getFieldDecorator} = this.props.form\n\n        return (\n            <Form>\n                <Item>\n                    {\n                        getFieldDecorator('categoryName',{\n                        initialValue:categoryName,\n                        rules:[\n                            {required:true,message:\"不能为控\"}\n                            ]\n                    })(\n                            <Input placeholder=\"请输入分类名称\" />\n                    )}\n\n                </Item>\n            </Form>\n        )\n    }\n}\nexport default Form.create()(UpdateForm)","import React from 'react'\nimport {Card,Table,Button,Icon,message,Modal} from \"antd\"\nimport \"./category.less\"\nimport LinkButton from \"../../components/link-button\";\nimport {reqAddCategorys, reqCategorys, reqUpdateCategorys} from \"../../api\"\nimport AddForm from \"./add-form\";\nimport UpdateForm from \"./update-form\";\n\nexport default class Category extends React.Component {\n\n    state = {\n        categorys:[],\n        loading:false,\n        parentId:'0',\n        parentName:'',\n        subCategorys:[],\n        showStatus:0\n    }\n\n    initColumns = () =>{\n        this.columns = [\n            {\n                title: '分类名称',\n                dataIndex: 'name',\n                key: 'name',\n            },\n            {\n                title: '操作',\n                width:300,\n                dataIndex: '',\n                key: 'x',\n                render:(category)=>(<span>\n                    <LinkButton onClick={()=>this.showUpdate(category)}>修改分类</LinkButton>\n                    {this.state.parentId ==='0'\n                        ?<LinkButton onClick={()=>this.showSubCategorys(category)}>查看子分类</LinkButton>\n                        :null}\n\n                </span>)\n            }\n\n        ];\n    }\n\n    showSubCategorys=(category)=>{\n        this.setState({\n            parentId:category._id,\n            parentName:category.name\n        },()=>{\n            this.getCategorys()\n        })\n\n    }\n\n    showCategorys = () =>{\n        this.setState({parentId:\"0\",parentName:'',subCategorys:[]},()=>{\n            console.log(this.state)\n        })\n    }\n\n    getCategorys = async () =>{\n       this.setState({loading:true});\n       const {parentId} = this.state;\n       const result = await reqCategorys(parentId);\n        this.setState({loading:false});\n       if(result.data.status==\"0\"){\n            const categorys = result.data.data;\n            console.log(categorys);\n            if(parentId==='0'){\n                this.setState({categorys});\n            }else{\n                this.setState({subCategorys:categorys})\n            }\n\n\n       }else{\n           message.error(\"获取分类失败\")\n       }\n    }\n\n    showAdd = () =>{\n        this.setState({\n            showStatus:1\n        })\n    }\n\n    showUpdate = (category) =>{\n        this.category = category\n        this.setState({\n            showStatus:2\n        })\n    }\n\n    addCategory = async() =>{\n        this.setState({\n            showStatus:0\n        })\n        const {parentId,categoryName} = this.form.getFieldsValue()\n        this.form.resetFields()\n        const result = await reqAddCategorys(categoryName,parentId)\n        if(result.data.status===0){\n            this.getCategorys()\n        }\n    }\n\n    updateCategory = () =>{\n        this.form.validateFields(async(err,value)=>{\n            if(!err){\n                this.setState({\n                    showStatus:0\n                })\n                const categoryId = this.category._id\n                //const categoryName = this.form.getFieldValue('categoryName')\n                const {categoryName} = value\n                this.form.resetFields()\n                console.log(111111);\n                console.log(categoryId);\n                console.log(categoryName);\n                const  reusult = await reqUpdateCategorys(categoryId,categoryName);\n                this.getCategorys()\n            }\n        })\n\n    }\n\n    handleCancel = () =>{\n        this.form.resetFields()\n        this.setState({showStatus:0})\n    }\n\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    componentDidMount() {\n        this.getCategorys();\n    }\n\n    render(){\n        const {categorys,loading,subCategorys,parentId,parentName} = this.state;\n        const columns = this.columns\n        const category = this.category || {}\n        const title = parentId ===0?\"一级分类列表\":(\n            <span>\n                <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\n                <Icon type=\"arrow-right\"></Icon>\n                <span>{parentName}</span>\n            </span>);\n        const extra = (\n            <Button type=\"primary\" onClick={this.showAdd}>\n                <Icon type=\"plus\"/>添加\n            </Button>\n        )\n\n        const dataSource = [\n            {\n                \"parentId\": '0',\n                \"_id\": '5ca9d69',\n                \"name\": '家用电器',\n                \"_v\":0\n            },{\n                \"parentId\": '0',\n                \"_id\": '5ca9d6c',\n                \"name\": '电脑',\n                \"_v\":0\n            },{\n                \"parentId\": '0',\n                \"_id\": '5ca9d7c',\n                \"name\": '图书',\n                \"_v\":0\n            },{\n                \"parentId\": '0',\n                \"_id\": '5ca9dbe',\n                \"name\": '服装',\n                \"_v\":0\n            }\n\n        ];\n\n\n\n        /*\n        return (\n            <Card title={title} extra={extra}>\n                <Table\n                    rowKey=\"_id\"\n                    bordered\n                    dataSource={dataSource} columns={columns} />;\n            </Card>\n        )\n        *\n         */\n\n        return (\n            <Card title={title} extra={extra}>\n                <Table\n                    rowKey=\"_id\"\n                    bordered\n                    dataSource={parentId==='0'?categorys:subCategorys}\n                    columns={columns}\n                    pagination={{defaultPageSize:5}}\n                    loading={loading}\n                />\n\n                <Modal\n                    title=\"添加分类\"\n                    visible={this.state.showStatus===1}\n                    onOk={this.addCategory}\n                    onCancel={this.handleCancel}\n                >\n                    <AddForm categorys={categorys} parentId={parentId} setForm={(form)=> {this.form = form} } />\n                </Modal>\n\n                <Modal\n                    title=\"更新分类\"\n                    visible={this.state.showStatus===2}\n                    onOk={this.updateCategory}\n                    onCancel={this.handleCancel}\n                >\n                   <UpdateForm categoryName={category.name}\n                               setForm={(form)=> {this.form = form} } />\n                </Modal>\n\n            </Card>\n\n        )\n    }\n}","import React from \"react\";\nimport {Form,Select,Input} from \"antd\"\nimport PropTypes from \"prop-types\"\n\nconst Item = Form.Item\n\nclass AddForm extends React.Component{\n\n    static propTypes = {\n        setForm:PropTypes.func.isRequired,\n    }\n\n    componentWillMount() {\n        this.props.setForm(this.props.form)\n    }\n\n    render(){\n        const {getFieldDecorator} = this.props.form\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 15},\n        };\n\n        return (\n            <Form {...formItemLayout}>\n                <Item>\n                    {\n                        getFieldDecorator('roleName',{\n                            initialValue:'',\n                            rules:[\n                                {required:true,message:'角色名称必须输入'}\n                            ]\n                        })(\n                          <Input placeholder=\"清输入角色名称\" />\n                        )}\n\n                </Item>\n\n            </Form>\n        )\n    }\n}\nexport default Form.create()(AddForm)","import React from \"react\";\nimport {Form,Input,Tree} from \"antd\"\nimport PropTypes from \"prop-types\"\nimport menuList from \"../../config/menuConfig\";\n\nconst Item = Form.Item\nconst { TreeNode } = Tree;\n\n\nexport default class AuthForm extends React.Component{\n\n    static propTypes = {\n        role:PropTypes.object.isRequired,\n    }\n\n\n    constructor(props) {\n        super(props);\n        const {menus} = this.props.role\n        console.log(menus)\n        this.state = {\n            checkedKeys:menus\n        }\n    }\n\n    getTreeNodes = (menuList) =>{\n        return menuList.reduce((pre,item)=>{\n            pre.push(<TreeNode title={item.title} key={item.key}  >\n                {item.children?this.getTreeNodes(item.children):null}\n            </TreeNode>)\n            return pre\n        },[])\n    }\n\n    onCheck = checkedKeys =>{\n        this.setState({\n            checkedKeys\n        })\n    }\n\n    getMenus = () => this.state.checkedKeys\n\n    componentWillMount() {\n        this.treeNodes = this.getTreeNodes(menuList)\n    }\n\n\n    render(){\n        const {role} = this.props\n        const {checkedKeys} = this.state\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 15},\n        };\n\n        return (\n            <div >\n                <Item label=\"角色名称\" {...formItemLayout}>\n                    <Input value ={role.name} disabled />\n                </Item>\n\n                <Tree\n                    checkable\n                    defaultExpandAll={true}\n                    checkedKeys={checkedKeys}\n                    onCheck={this.onCheck}\n                >\n                    <TreeNode title=\"平台权限\" key=\"all\">\n                        {this.treeNodes}\n                    </TreeNode>\n                </Tree>\n\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {Button, Table, Card, Modal,message} from \"antd\"\nimport {PAGE_SIZE} from \"../../utils/constant\";\nimport AddForm from \"./add-form\";\nimport AuthForm from \"./auth-form\";\nimport {reqAddUser,reqUpdateRole} from \"../../api\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport {formateDate} from \"../../utils/dateUtils\";\nimport storageUtiles from \"../../utils/storageUtiles\";\n\nexport default class Role extends React.Component {\n    state = {\n        roles:[{\n            \"menus\":[\n                \"/home\",\n                \"/products\",\n                \"/category\",\n                \"/product\",\n                \"/role\"\n            ],\n            \"_id\":\"5ca9eac0\",\n            \"name\":\"角色1\",\n            \"create_time\":1554639552758,\n            \"_v\":0,\n            \"auth_time\":1557630307021,\n            \"auth_name\":\"admim\"\n        }],\n        loading:false,\n        role:{},\n        isShowAdd:false,\n        isShowAuth:false\n    }\n\n    constructor(props) {\n        super(props);\n        this.auth = React.createRef()\n    }\n\n    initColumn = () =>{\n        this.columns = [\n            {\n                title:'角色名称',\n                dataIndex:'name'\n            }, {\n                title:'创建时间',\n                dataIndex:'create_time',\n                render:(creat_time)=>formateDate(creat_time)\n            },{\n                title:'授权时间',\n                dataIndex:'auth_time',\n                render:formateDate\n            },{\n                title:'授权人',\n                dataIndex:'auth_name'\n            },\n        ]\n    }\n\n    addRole =() =>{\n        this.form.validateFields(async(err,values)=>{\n            if(!err){\n                this.setState({isShowAdd:false})\n                const {roleName} = values\n                this.form.resetFields()\n                const result = await reqAddUser(roleName)\n                if(result.status===0){\n                    message.success(\"添加陈宫\")\n                    const role = result.data\n                    this.setState(state=>({\n                        roles:[...state.roles,role]\n                    }))\n\n                }else{\n                    message.error(\"添加失败\")\n                }\n            }\n        })\n    }\n\n    updateRole = async() =>{\n        this.setState({\n            isShowAuth:true\n        })\n        const role = this.state.role\n        const menus = this.auth.current.getMenus\n        role.menus = menus\n        role.auth_name = memoryUtils.user.username\n        role.auth_time = Date.now()\n        const result = await reqUpdateRole(role)\n        if(result.state===0){\n            message.success(\"设置角色权限成功\")\n            if(role._id == memoryUtils.user.role._id){\n                memoryUtils.user ={}\n                storageUtiles.removeUser()\n                this.props.history.replace('/login')\n            }\n            this.setState({\n                roles:[...this.state.roles]\n            })\n        }else{\n            message.error(\"设置角色失败\")\n        }\n\n    }\n\n    handleCancel =()=>{\n        this.setState({isShowAdd:false})\n        this.form.resetFields()\n    }\n\n    handleCancelAuth =()=>{\n        this.setState({isShowAuth:false})\n\n    }\n\n    onRow = (role)=>{\n        return {\n            onClick : event=>{\n                this.setState({\n                    role\n                })\n            }\n        }\n    }\n\n\n    componentWillMount(){\n        this.initColumn()\n    }\n\n    // componentWillReceiveProps(nextProps, nextContext) {\n    //     console.log(nextProps.role);\n    //    // const menus = nextProps.role.menus\n    //    // this.state.checkedKeys = menus\n    // }\n\n\n    render(){\n        const {roles,loading,role,isShowAdd,isShowAuth} = this.state\n\n        const title=(\n            <span>\n                    <Button type=\"primary\" onClick={()=>this.setState({isShowAdd: true})}>创建角色</Button>&nbsp;&nbsp;\n                    <Button type=\"primary\" disabled={!role._id} onClick={()=>this.setState({isShowAuth: true})}>设置角色权限</Button>\n            </span>\n        )\n\n        const rowSelection = ({\n            type:'radio',\n            selectedRowKeys:[role._id],\n            onSelect:(role)=>{\n                this.setState({\n                    role\n                })\n            }\n        })\n\n\n\n        return (\n            <Card title={title} >\n                <Table\n                    bordered\n                    rowKey=\"_id\"\n                    loadding={loading}\n                    dataSource={roles}\n                    columns={this.columns}\n                    pagination={{defaultPageSize:5}}\n                    rowSelection={rowSelection}\n                    onRow={this.onRow}\n                 />\n                <Modal\n                    title=\"添加角色\"\n                    visible={isShowAdd}\n                    onOk={this.addRole}\n                    onCancel={this.handleCancel}\n                >\n                    <AddForm  setForm={(form)=> {this.form = form} } />\n                </Modal>\n\n                <Modal\n                    title=\"设置权限\"\n                    visible={isShowAuth}\n                    onOk={this.updateRole}\n                    onCancel={this.handleCancelAuth}\n                >\n                    <AuthForm ref={ this.auth} role={role} />\n                </Modal>\n            </Card>\n        )\n    }\n}","import React from \"react\";\nimport {Form,Select,Input} from \"antd\"\nimport PropTypes from \"prop-types\"\n\nconst Item = Form.Item\nconst Option = Select.Option\n\nclass UserForm extends React.PureComponent{\n\n    static propTypes = {\n        roles:PropTypes.array.isRequired,\n        setForm:PropTypes.func.isRequired,\n        user:PropTypes.object\n    }\n\n\n    componentWillMount() {\n        this.props.setForm(this.props.form)\n    }\n\n\n\n    render(){\n        const {roles} = this.props\n        const user = this.props.user || {}\n        const {getFieldDecorator} = this.props.form\n\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 15},\n        };\n\n        return (\n            <Form {...formItemLayout}>\n                <Item label=\"用户名\">\n                    {\n                        getFieldDecorator('username',{\n                            initialValue:user.username,\n                            rules:[\n                                {required:true,message:'角色名称必须输入'}\n                            ]\n                        })(\n                          <Input placeholder=\"清输入角色名称\" />\n                        )}\n\n                </Item>\n                { user._id ? null:   <Item label=\"密码\">\n                    {\n                        getFieldDecorator('password',{\n                            initialValue:user.password,\n                            rules:[\n                                {required:true,message:'密码必须输入'}\n                            ]\n                        })(\n                            <Input type=\"password\" placeholder=\"清输入密码\" />\n                        )}\n\n                </Item>}\n\n                <Item label=\"手机号\">\n                    {\n                        getFieldDecorator('phone',{\n                            initialValue:user.phone,\n                            rules:[\n                                {required:true,message:'手机号必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"清输入手机号\" />\n                        )}\n\n                </Item>\n                <Item label=\"邮箱\">\n                    {\n                        getFieldDecorator('email',{\n                            initialValue:user.email,\n                            rules:[\n                                {required:true,message:'邮箱必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"清输入邮箱\" />\n                        )}\n\n                </Item>\n                <Item label=\"角色\">\n                    {\n                        getFieldDecorator('role_id',{\n                            initialValue:user.role_id,\n                            rules:[\n                                {required:true,message:'角色必须输入'}\n                            ]\n                        })(\n                            <Select>\n                                {\n                                    roles.map(role=> <Option key={role._id} value={role._id}>{role.name}</Option>)\n                                }\n\n                            </Select>\n                        )}\n                </Item>\n            </Form>\n        )\n    }\n}\nexport default Form.create()(UserForm)","import React from 'react'\nimport {Modal, Card, Button, Table, message} from \"antd\"\nimport {PAGE_SIZE} from \"../../utils/constant\";\nimport {formateDate} from \"../../utils/dateUtils\";\nimport LinkButton from \"../../components/link-button\";\nimport UserForm from \"./user-form\";\nimport {reqGetUsers,reqDeleUser,reqAddUser} from \"../../api\"\n\nexport default class User extends React.Component {\n\n    state = {\n        loading:false,\n        users:[{\n            \"username\":\"text\",\n            \"_id\":\"548542421\",\n            \"create_time\":1554639552758,\n            \"email\":\"test@aadfa.conm\",\n            \"phone\":\"15712548\",\n            \"role_id\":\"fdsa854854\",\n            \"password\":\"12312312\"\n        }],\n        roles:[{\n            \"_id\":\"fdsa854854\",\n            \"name\":\"测试\"\n        }],\n        isShow:false,\n\n    }\n\n    initColumn = ()=>{\n        this.columns = [{\n            title:'用户明',\n            dataIndex:\"username\"\n        },{\n            title:\"邮箱\",\n            dataIndex: \"email\"\n        },{\n            title:\"电话\",\n            dataIndex: \"phone\"\n        },{\n            title:\"注册时间\",\n            dataIndex: \"create_time\",\n            render:formateDate\n        },{\n            title:\"所属角色\",\n            dataIndex: \"role_id\",\n           render:(role_id)=>this.state.roles.find(role=>role._id === role_id).name\n           // render:(role_id)=>this.roleNames[role_id]\n        },{\n            title:\"操作\",\n           render:(user)=>(\n            <span>\n                <LinkButton onClick={()=>this.showUpdate(user)}>修改</LinkButton>\n                <LinkButton onClick={()=>this.deleteUser(user)}>删除</LinkButton>\n            </span>\n           )\n        }\n        ]\n    }\n\n    showUpdate = (user) =>{\n        this.user = user\n        this.setState({isShow:true})\n    }\n\n    showAdd = () =>{\n        this.user = null\n        this.setState({isShow:true})\n    }\n\n\n\n    addOrUpdateUser = async() =>{\n        this.setState({isshow:false})\n        const user = this.form.getFieldsValue()\n        this.form.resetFields()\n        const result = await  reqAddUser(user);\n        if(result.static === 0) {\n            message.success(\"添加成功\")\n            this.getUsers()\n        }\n\n    }\n\n    deleteUser =(user) =>{\n        Modal.confirm({\n            title:\"确定要删除用户\"+user.username+\"?\",\n            onOk:async()=>{\n                const result =await reqDeleUser(user._id)\n                if(result.status === 0){\n                    message.success(\"删除用户成功\")\n                    this.getUsers()\n                }\n            }\n        })\n    }\n\n    initRoleNames = (roles) => {\n        const  roleNames = roles.reduce((pre,role)=>{\n            pre[role._id] = role.name\n            return pre\n        },[])\n        this.roleNames = roleNames\n    }\n\n    getUsers = async() => {\n        const result = await reqGetUsers();\n        if(result.status === 0){\n            const {users,roles} = result.data\n            this.initRoleNames(roles)\n            this.setState({\n                users,roles\n            })\n        }\n\n    }\n\n\n    componentDidMount() {\n        this.initColumn()\n        this.getUsers()\n    }\n\n    render(){\n        const title = (<Button type=\"primary\" onClick={()=>this.showAdd()}>创建用户</Button>);\n        const {loading,users,isShow,roles} = this.state\n        const user = this.user\n        return (\n\n            <Card title={title}>\n                <Table\n                    bordered\n                    rowKey=\"_id\"\n                    loadding={loading}\n                    dataSource={users}\n                    pagination={ {defaultPageSize:5} }\n                    columns={this.columns} />\n                <Modal\n                    title={user?'修改用户':\"添加用户\"}\n                    visible={isShow}\n                    onOk={this.addOrUpdateUser}\n                    onCancel={()=>{\n                        this.form.resetFields();\n                        this.setState({isShow: false})\n                    }}\n                >\n                    <UserForm user={user} setForm={form=>this.form = form} roles={roles}>1111</UserForm>\n                </Modal>\n\n\n            </Card>\n        )\n    }\n}","import React from 'react'\nimport {Card,Button} from \"antd\"\nimport ReactEcharts from \"echarts-for-react\"\n\nexport default class Bar extends React.Component {\n\n    state = {\n        sales:[5,20,36,10,10,20]\n    }\n\n    update = () =>{\n        this.setState((state)=>({\n            sales:state.sales.map(sale=>sale+1)\n        }))\n    }\n\n    render(){\n        const {sales} = this.state\n        return (\n            <div>\n                <Card>\n                    <Button type=\"primary\" onClick={this.update}>更新</Button>\n                </Card>\n                <Card title='柱状图-->'>\n                    <ReactEcharts option={this.getOption(sales)} />\n                </Card>\n            </div>\n        )\n    }\n\n    getOption = (sales,stores) => {\n        return {\n            title:{\n                text:'Echarts 入门'\n            },\n            tooltip:{},\n            legend:{\n                data:['销量']\n            },\n            xAxis:{\n                data:['衬衫','羊毛伞','雪纺裤','裤子','高跟鞋','袜子']\n            },\n            yAxis:{},\n            series:[{\n                name:'销量',\n                type:'bar',\n                data:sales\n            }]\n        }\n    }\n}","import React from 'react'\nimport {Card,Button} from \"antd\"\nimport ReactEcharts from \"echarts-for-react\"\n\nexport default class Line extends React.Component {\n\n    state = {\n        sales:[5,20,36,10,10,20]\n    }\n\n    update = () =>{\n        this.setState((state)=>({\n            sales:state.sales.map(sale=>sale+1)\n        }))\n    }\n\n    render(){\n        const {sales} = this.state\n        return (\n            <div>\n                <Card>\n                    <Button type=\"primary\" onClick={this.update}>更新</Button>\n                </Card>\n                <Card title='折线图-->'>\n                    <ReactEcharts option={this.getOption(sales)} />\n                </Card>\n            </div>\n        )\n    }\n\n    getOption = (sales) => {\n        return {\n            title:{\n                text:'Echarts 入门'\n            },\n            tooltip:{},\n            legend:{\n                data:['销量']\n            },\n            xAxis:{\n                data:['衬衫','羊毛伞','雪纺裤','裤子','高跟鞋','袜子']\n            },\n            yAxis:{},\n            series:[{\n                name:'销量',\n                type:'line',\n                data:sales\n            }]\n        }\n    }\n}","import React, {Component} from 'react'\nimport {Card} from 'antd'\nimport ReactEcharts from 'echarts-for-react'\n\n/*\n后台管理的饼图路由组件\n */\nexport default class Pie extends Component {\n\n  getOption = () => {\n    return {\n      title : {\n        text: '某站点用户访问来源',\n        subtext: '纯属虚构',\n        x:'center'\n      },\n      tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left',\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\n      },\n      series : [\n        {\n          name: '访问来源',\n          type: 'pie',\n          radius : '55%',\n          center: ['50%', '60%'],\n          data:[\n            {value:335, name:'直接访问'},\n            {value:310, name:'邮件营销'},\n            {value:234, name:'联盟广告'},\n            {value:135, name:'视频广告'},\n            {value:1548, name:'搜索引擎'}\n          ],\n          itemStyle: {\n            emphasis: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }\n      ]\n    };\n\n  }\n\n  getOption2 = () => {\n    return {\n      backgroundColor: '#2c343c',\n\n      title: {\n        text: 'Customized Pie',\n        left: 'center',\n        top: 20,\n        textStyle: {\n          color: '#ccc'\n        }\n      },\n\n      tooltip : {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n      },\n\n      visualMap: {\n        show: false,\n        min: 80,\n        max: 600,\n        inRange: {\n          colorLightness: [0, 1]\n        }\n      },\n      series : [\n        {\n          name:'访问来源',\n          type:'pie',\n          radius : '55%',\n          center: ['50%', '50%'],\n          data:[\n            {value:335, name:'直接访问'},\n            {value:310, name:'邮件营销'},\n            {value:274, name:'联盟广告'},\n            {value:235, name:'视频广告'},\n            {value:400, name:'搜索引擎'}\n          ].sort(function (a, b) { return a.value - b.value; }),\n          roseType: 'radius',\n          label: {\n            normal: {\n              textStyle: {\n                color: 'rgba(255, 255, 255, 0.3)'\n              }\n            }\n          },\n          labelLine: {\n            normal: {\n              lineStyle: {\n                color: 'rgba(255, 255, 255, 0.3)'\n              },\n              smooth: 0.2,\n              length: 10,\n              length2: 20\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: '#c23531',\n              shadowBlur: 200,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n\n          animationType: 'scale',\n          animationEasing: 'elasticOut',\n          animationDelay: function (idx) {\n            return Math.random() * 200;\n          }\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Card title='饼图一'>\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\n        </Card>\n        <Card title='饼图二'>\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\n        </Card>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {Table,Card,Select,Input,Button,Icon,message} from \"antd\"\nimport LinkButton from \"../../components/link-button\";\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from \"../../api\";\nimport {PAGE_SIZE} from \"../../utils/constant\";\n\nconst Option = Select.Option;\n\nexport default class ProductHome extends React.Component {\n\n    state = {\n        products:[],\n        total:0,\n        loading:false,\n        searchName:'',\n        searchType:'productName'\n\n    }\n\n    initColumns = () =>{\n        this.columns = [\n            {\n                title: '商品名称',\n                dataIndex: 'name',\n                key: 'name',\n            },\n            {\n                title: '商品描述',\n                dataIndex: 'desc',\n                key: 'age',\n            },\n            {\n                title: '价格',\n                dataIndex: 'price',\n                render: (price)=>\"￥\"+price,\n            }, {\n                width:100,\n                title: '状态',\n                render: (product)=>{\n                    const {status,_id} = product\n                    return (\n                        <span>\n                            <Button\n                                type=\"primary\"\n                                onClick={()=>this.updateStatus(status===0?1:0,_id)}\n                            >\n                                {status===1?'下架':'上架'}\n                            </Button>\n                        <span>{status===1?'在售':'已下架'}</span>\n                    </span>)\n                },\n            },{\n                width:100,\n                title: '操作',\n                render: (product)=>{\n                    return (\n                        <span>\n                            <LinkButton onClick={()=>this.props.history.push(\"/product/detail\",product)}>详情</LinkButton>\n                            <LinkButton onClick={()=>this.props.history.push(\"/product/addupdate\",product)}>修改</LinkButton>\n                    </span>)\n                },\n            },\n        ];\n    }\n\n    updateStatus = async(status,_id)=>{\n        const result = await reqUpdateStatus(_id,status);\n        if(result.data.status===0){\n            message.success(\"更新成功\")\n            this.getProducts(this.pageNum)\n        }\n    }\n\n    getProducts = async(pageNum) =>{\n        this.pageNum = pageNum;\n        this.setState({loading:true})\n        const {searchName,searchType} = this.state\n        let result;\n        if(searchName){\n             result = await  reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType})\n        }else{\n            result = await reqProducts(pageNum,PAGE_SIZE);\n        }\n\n        this.setState({loading:false})\n        console.log(result.data);\n        if(result.data.status === 0){\n            const {total,list} = result.data.data;\n            this.setState({\n                total,\n                products:list\n            })\n        }\n    }\n\n    componentWillMount() {\n        this.initColumns()\n    }\n\n    componentDidMount() {\n        this.getProducts(1)\n    }\n\n    render(){\n        const {products,total,loading,searchName,searchType} = this.state;\n\n        const title = (\n            <span>\n                <Select value={searchType} style={{width:150}} onChange={value=>this.setState({searchType: value})}>\n                    <Option value=\"productName\">按名称搜索</Option>\n                    <Option value=\"productDesc\">按描述搜索</Option>\n                </Select>\n                <Input placeholder=\"关键字\"\n                       style={{width:150,margin:'0 15px'}}\n                       value={searchName}\n                       onChange={event=>this.setState({searchName:event.target.value})} />\n                <Button type=\"primary\" onClick={()=>this.getProducts(1)}>搜索</Button>\n            </span>);\n\n        const extra = (\n            <Button type=\"primary\" onClick={()=>this.props.history.push(\"/product/addupdate\")}>\n            <Icon type=\"plus\"></Icon>\n            添加商品\n        </Button>);\n\n\n\n\n\n        return (\n            <Card title={title} extra={extra}>\n                <Table\n                    bordered\n                    rowKey=\"_id\"\n                    loadding={loading}\n                    dataSource={products}\n                    pagination={\n                        {\n                            total:total,\n                            defaultPageSize:PAGE_SIZE,\n                            onChange:this.getProducts\n                        }\n                    }\n                    columns={this.columns} />\n            </Card>\n        )\n    }\n}","export const PAGE_SIZE = 2\nexport const BASE_IMG_URL = \"http://localhost:3000/static/media/\"","import React from \"react\";\n\nimport PropTypes from \"prop-types\"\nimport { Upload, Icon, Modal, message } from 'antd';\nimport {reqDeleteImg} from \"../../api\"\nimport {BASE_IMG_URL} from \"../../utils/constant\"\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default  class PicturesWall extends React.Component {\n\n\n  static protypes = {\n    imgs:PropTypes.array\n  }\n\n  constructor(props) {\n    super(props);\n    let fileList = [];\n    const {imgs} = this.props\n    if(imgs && imgs.length>0){\n      fileList =imgs.map(\n          (img,index)=>({\n             uid:-index,\n             name:img,\n             status:'done',\n            url:BASE_IMG_URL + img\n          }))\n    }\n    console.log(1111);\n    console.log(fileList);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: fileList,\n    }\n  }\n\n  getImgs = () =>{\n    return this.state.fileList.map(file=>file.name)\n  }\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = async({file, fileList }) => {\n    if(file.status === 'done'){\n      const result = file.response\n      if(result.status ===0){\n        message.success('上传成功')\n        const {name,url} = result.data\n        file = fileList[fileList.length-1]\n        file.name = name\n        file.url = url\n      }else{\n        message.error(\"上传失败\")\n      }\n    }else if(file.status === 'removed'){\n      const result =await  reqDeleteImg(file.name)\n      if(result.status === 0){\n        message.success(\"删除成功\")\n      }else{\n        message.error(\"删除失败\")\n      }\n    }\n    this.setState({ fileList })\n  };\n\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <div>\n        <Upload\n          accept=\"image/*\"\n          action=\"/users/upload\"\n          listType=\"picture-card\"\n          fileList={fileList}\n          name=\"image\"\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {fileList.length >= 3 ? null : uploadButton}\n        </Upload>\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport PropTypes from \"prop-types\"\n\nexport default  class RichTextEditor extends Component {\n    state = {\n        editorState: EditorState.createEmpty(),\n    }\n\n    static propTypes = {\n        detail:PropTypes.string\n    }\n\n    constructor(props) {\n        super(props);\n        const html = this.props.detail;\n        if(html){\n            const contentBlock = htmlToDraft(html);\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            const editorState = EditorState.createWithContent(contentState);\n            this.state = {\n                editorState,\n            };\n        }else{\n            this.state = {\n                editorState: EditorState.createEmpty(),\n            }\n        }\n\n    }\n\n    uploadImageCallback = (file) => {\n        return new Promise(\n            (resolve, reject) => {\n                const xhr = new XMLHttpRequest();\n                xhr.open('POST', '/users/uploadimg');\n                const data = new FormData();\n                data.append('image', file);\n                xhr.send(data);\n                xhr.addEventListener('load', () => {\n                    const response = JSON.parse(xhr.responseText);\n                    const url = response.data.url\n                    resolve({data:{link:url}});\n                });\n                xhr.addEventListener('error', () => {\n                    const error = JSON.parse(xhr.responseText);\n                    reject(error);\n                });\n            }\n        );\n    }\n\n    getDetail = () =>{\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\n    }\n\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n    render() {\n        const { editorState } = this.state;\n        return (\n                <Editor\n                    editorState={editorState}\n                    editorStyle={{border:'1px solid black',minHeight:200,paddingLeft:10 }}\n                    onEditorStateChange={this.onEditorStateChange}\n                    toolbar={{\n                        image: { uploadCallback:this.uploadImageCallback,alt:{present:true,mandatory:true} },\n                    }}\n                />\n        );\n    }\n}","import React from 'react'\nimport {Card,Form,Input,Cascader,Button,Icon,message} from \"antd\"\nimport LinkButton from \"../../components/link-button\";\nimport {reqCategorys} from \"../../api\"\nimport category from \"../category/category\";\nimport PicturesWall from \"./Pictures-wall\";\nimport RichTextEditor from \"./rich-text-editor\";\nimport {reqAddOrUpdateProduct} from \"../../api/index\"\n\nconst {Item} = Form\nconst {TextArea} = Input\n\nconst options = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        isLeaf: false,\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        isLeaf: false,\n    },\n    {\n        value: 'jiangsu2',\n        label: 'Jiangsu2',\n        isLeaf: true,\n    },\n];\n\nclass ProductAddUpdate extends React.Component {\n\n    state = {\n        options:[],\n    };\n\n    constructor(props) {\n        super();\n        this.pw = React.createRef()\n        this.editor =React.createRef()\n    }\n\n    submit = () =>{\n        this.props.form.validateFields(async (err,values)=>{\n            if(!err){\n                const {name,desc,price,categoryIds} =values\n                let pCategoryId,categoryId\n                if(categoryIds.length ===1){\n                    pCategoryId = '0'\n                    categoryId =categoryIds[0]\n                }else{\n                    pCategoryId = categoryIds[0]\n                    categoryId = categoryIds[1]\n                }\n\n                const imgs = this.pw.current.getImgs()\n                const detail = this.editor.current.getDetail()\n                const product = {name,desc,price,imgs,detail,pCategoryId,categoryId}\n                if(this.isUpdate){\n                    product._id = this.product._id\n                }\n                const result = await reqAddOrUpdateProduct(product)\n                if(result.status === 0){\n                    message.success(`${this.isUpdate}? '更新:'添加'商品成功!`)\n                    this.props.history.goBack()\n                }else{\n                    message.error(`${this.isUpdate}? '更新:'添加'商品失败!`)\n                }\n            }\n        })\n    }\n\n    validattorPrice = (rule,value,callback) =>{\n        if(value*1>0){\n            callback()\n        }else{\n            callback(\"价格格式不对\")\n        }\n\n    }\n\n    getCategory = async(parentId) =>{\n        const result  = await reqCategorys(parentId)\n        console.log(result.data.status);\n        if(result.data.status === \"0\"){\n            const categorys = result.data.data\n            if(parentId === \"0\"){\n                this.initOptions(categorys)\n            }else{\n                return categorys\n            }\n\n        }\n    }\n\n    initOptions =async (catagerys) =>{\n       const options = catagerys.map(c=>({\n            value: c._id,\n            label: c.name,\n            isLeaf: false,\n        }))\n\n        const {isUpdate,product} = this\n        const {pCategoryId,categoryId} =product\n        if(isUpdate && pCategoryId !== '0'){\n           const subCategorys = await this.getCategory(pCategoryId)\n            const childOptions = subCategorys.map(c=>({\n                value: c._id,\n                label: c.name,\n                isLeaf: false,\n            }))\n            const targetOption = options.find(option=>option.value == pCategoryId)\n            targetOption.children = childOptions\n\n        }\n        console.log(options)\n        this.setState({\n            options\n        })\n\n    }\n\n\n    loadData =  async selectedOptions => {\n        const targetOption = selectedOptions[0];\n        targetOption.loading = true;\n\n        const subCategory =  await this.getCategory(targetOption.value)\n        targetOption.loading = false;\n        if(subCategory && subCategory.length>0){\n               const childOptions = subCategory.map(c=>({\n                    value: c._id,\n                    label: c.name,\n                    isLeaf: true,\n                }))\n            targetOption.children = childOptions\n        }else{\n            targetOption.isLeaf = true;\n        }\n        // setTimeout(() => {\n        //     targetOption.loading = false;\n        //     targetOption.children = [\n        //         {\n        //             label: `${targetOption.label} Dynamic 1`,\n        //             value: 'dynamic1',\n        //         },\n        //         {\n        //             label: `${targetOption.label} Dynamic 2`,\n        //             value: 'dynamic2',\n        //         },\n        //     ];\n            this.setState({\n                options: [...this.state.options],\n            });\n        // }, 1000);\n    };\n\n\n    componentDidMount() {\n        this.getCategory('0')\n    }\n\n    componentWillMount() {\n        const product = this.props.location.state\n        this.isUpdate = !!product\n        this.product = product || {}\n    }\n\n\n    render(){\n        const {getFieldDecorator } = this.props.form\n        const {isUpdate,product} = this\n        const {pCategoryId,categoryId,imgs,detail} = product\n        const categoryIds = [];\n\n        if(isUpdate){\n            if(pCategoryId === '0'){\n                categoryIds.push(categoryId)\n            }else{\n                categoryIds.push(pCategoryId)\n                categoryIds.push(categoryId)\n            }\n\n        }\n\n        const title = (\n            <span>\n                <LinkButton onClick={()=>this.props.history.goBack()}>\n                    <Icon type=\"arrow-left\" style={{fontSize:20}}/>\n                </LinkButton>\n                <span>{isUpdate?'修改商品':'添加商品'}</span>\n            </span>\n        )\n\n        const formItemLayout = {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 8},\n        };\n\n\n        return (\n            <Card title={title}>\n                <Form {...formItemLayout}>\n                    <Item label=\"商品名称:\">\n                        {\n                            getFieldDecorator('name',{\n                                initialValue:product.name,\n                                rules:[\n                                    {required:true,message:\"请输入商品名称\"}\n                                ]\n                            })(\n                                <Input placeholder=\"商品名称\"></Input>\n                            )\n                        }\n                    </Item>\n                    <Item label=\"商品描述:\">\n                        {\n                            getFieldDecorator('desc',{\n                                initialValue:product.desc,\n                                rules:[\n                                    {required:true,message:\"请输入商品描述\"}\n                                ]\n                            })(\n                                <TextArea  placeholder=\"商品描述\" autoSize ={{minRows:2}} />\n                            )\n                        }\n\n                    </Item>\n                    <Item label=\"商品价格:\">\n                        {\n                            getFieldDecorator('price',{\n                                initialValue:product.price,\n                                rules:[\n                                    {required:true,message:\"请输入商品描述\"},\n                                    {validator:this.validattorPrice}\n                                ]\n                            })(\n                                <Input type=\"number\" addonAfter=\"元\" placeholder=\"商品价格\"></Input>\n                            )\n                        }\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        <div>商品分类</div>\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        {\n                            getFieldDecorator('categoryIds',{\n                                initialValue:categoryIds,\n                                rules:[\n                                    {required:true,message:\"请输入商品分类\"}\n                                ]\n                            })(\n                                <Cascader\n                                    options={this.state.options}\n                                    loadData={this.loadData}\n                                    onChange={this.onChange}\n                                    changeOnSelect\n                                />\n                            )\n                        }\n\n\n                    </Item>\n                    <Item label=\"商品图片:\">\n                        <PicturesWall  ref={this.pw} imgs ={imgs} />\n                    </Item>\n                    <Item label=\"商品详情:\" labelCol={{ span: 2 }} wrapperCol={{ span: 20}}>\n                        <RichTextEditor  ref={this.editor} detail={detail} />\n                    </Item>\n\n                    <Item>\n                        <Button type=\"primary\" onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\n\nexport default Form.create()(ProductAddUpdate);","import React from 'react'\nimport {Card,Icon,List} from \"antd\"\nimport LinkButton from \"../../components/link-button\";\nimport {BASE_IMG_URL} from \"../../utils/constant\"\nimport {reqCategory} from \"../../api\"\n\nconst Item = List.Item\nexport default class ProductDetail extends React.Component {\n\n    state = {\n        cName1:'',\n        cName2:''\n    }\n\n    getCategoryInfo(){\n\n    }\n\n    async componentDidMount() {\n        const {pCategoryId,categoryId} = this.props.location.state;\n\n        if(pCategoryId === 0){\n            const result1 = await reqCategory(categoryId)\n            const cName1 = result1.data.data.name\n            this.setState({cName1})\n        }else{\n            // const result1 = await reqCategory(categoryId)\n            // const result2 = await reqCategory(pCategoryId)\n            //\n            // const cName1 = result1.data.data.name\n            // const cName2 =  result2.data.data.name\n            const  results = await Promise.all([reqCategory(categoryId),reqCategory(pCategoryId)])\n            const cName1 = results[0].data.data.name\n            const cName2 = results[1].data.data.name\n            this.setState({cName1,cName2})\n        }\n        this.getCategoryInfo()\n    }\n\n    render(){\n\n        const {name,desc,price,detail,imgs} = this.props.location.state\n        const {cName1,cName2} = this.state\n        const title =(\n            <span>\n                <LinkButton>\n                    <Icon type=\"arrow-left\" style={{color:'green',marginRight:10,fontSize:20}} onClick={()=>this.props.history.goBack()}></Icon>\n                </LinkButton>\n                <span>商品心情</span>\n            </span>\n        )\n\n        return (\n            <Card title={title} className=\"product-detail\">\n                <List>\n                    <Item>\n                        <span className=\"left\">商品名称:</span>\n                        <span>{name}</span>\n                    </Item>\n                    <Item>\n                        <span className=\"left\">商品描述:</span>\n                        <span>{desc}</span>\n                    </Item>\n                    <Item>\n                        <span className=\"left\">商品价格:</span>\n                        <span>{price}</span>\n                    </Item>\n                    <Item>\n                        <span className=\"left\">所属分类:</span>\n                        <span>{cName1}-{cName2?'-->'+cName2:''}</span>\n                    </Item>\n                    <Item>\n                        <span className=\"left\">商品图片:</span>\n                        <span>\n                            {\n                                imgs.map(img=>(\n                                    <img\n                                        key={img+Math.random()}\n                                        className=\"product-img\"\n                                        src={BASE_IMG_URL+ img}\n                                        alt=\"img\"/>\n                                ))\n                            }\n                        </span>\n                    </Item>\n                    <Item>\n                        <span className=\"left\">商品详情:</span>\n                        <span dangerouslySetInnerHTML={{__html:detail}}></span>\n                    </Item>\n                </List>\n            </Card>\n        )\n    }\n}","import React from 'react'\nimport {Switch,Route,Redirect} from \"react-router-dom\"\n\nimport ProductHome from \"./home\";\nimport ProductAddUpdate from \"./add-update\";\nimport ProductDetail from \"./datail\";\nimport \"./product.less\"\n\nexport default class Product extends React.Component {\n    render(){\n        return (\n            <Switch>\n                <Route exact path=\"/product\" component={ProductHome} />\n                <Route path=\"/product/addupdate\" component={ProductAddUpdate} />\n                <Route path=\"/product/detail\" component={ProductDetail} />\n                <Redirect to=\"/product\" />\n            </Switch>\n        )\n    }\n}","import React from \"react\"\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport { Redirect,Route,Switch } from \"react-router-dom\";\nimport {Layout} from \"antd\"\nimport LeftNav from \"../../components/left-nav/left-nav\";\nimport  HeaderContent from \"../../components/header/header\";\nimport Home from \"../home/home\"\nimport Category from \"../category/category\";\nimport Role from \"../role/role\";\nimport User from \"../user/user\";\nimport Bar from \"../chars/bar\";\nimport Line from \"../chars/line\";\nimport Pie from \"../chars/pie\";\nimport Product from \"../product/product\";\n\nconst {Footer,Sider,Content} =Layout\n\nexport default class Admin extends React.Component{\n    render(){\n        const user = memoryUtils.user\n        console.log(user)\n        if(!user || !user.username){\n            //this.props.history.replace(\"/login\")\n            return <Redirect to='/login' />\n        }\n        return (\n            <Layout style={{minHeight:'100%'}}>\n                <Sider><LeftNav /></Sider>\n                <Layout>\n                    <HeaderContent>Header</HeaderContent>\n                    <Content style={{margin:'20px',backgroundColor:'#fff'}}>\n                        <Switch>\n                            <Route path=\"/home\" component={Home} />\n                            <Route path=\"/category\" component={Category} />\n                            <Route path=\"/product\" component={Product} />\n                            <Route path=\"/role\" component={Role} />\n                            <Route path=\"/user\" component={User} />\n                            <Route path=\"/charts/bar\" component={Bar} />\n                            <Route path=\"/charts/pie\" component={Pie} />\n                            <Route path=\"/charts/line\" component={Line} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </Content>\n                    <Footer style={{textAlign: 'center', color: '#cccccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\n                </Layout>\n            </Layout>\n        )\n    }\n}","import React from \"react\"\nimport \"./login.less\"\nimport logo from \"../../assets/images/logo.png\"\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport {reqLogin} from \"../../api\"\nimport {message} from \"antd\"\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtiles from \"../../utils/storageUtiles\";\nimport {connect} from \"react-redux\"\nimport { login} from \"../../redux/actions\"\n\nclass Login extends React.Component{\n\n\n    handleSubmit = e => {\n        e.preventDefault();\n       this.props.form.validateFields(async (err,values)=>{\n           if(!err){\n               this.props.login(values.username,values.password)\n              const response = await reqLogin(values.username,values.password);\n              const result = response.data;\n              if(!result.stateus){\n                  message.success(\"login success\");\n                  memoryUtils.user = {username:\"crc\",role:{menus:\"/product\"}}\n                  storageUtiles.saveUser({username:\"crc\"});\n                  this.props.history.replace(\"/admin\")\n              }\n           }else{\n               console.log(\"validate fail\")\n           }\n       })\n    };\n\n    validatorPwd = (rule,value,callback)=>{\n        if(!value){\n            callback(\"not empty\")\n        }else if(value.length<6){\n            callback(\"at least 6\")\n        }else if(value.length>12){\n            callback(\"most 12\")\n        }else{\n            callback()\n        }\n\n    }\n\n    render(){\n        //const user = memoryUtils.user;\n        const user = this.props.user\n        console.log(user);\n\n        const { getFieldDecorator } = this.props.form;\n         return (\n            <div className=\"login\">\n                <header className=\"login-header\">\n                    <img src={logo} alt=\"logo\" />\n                    <h1>React 后台管理系统</h1>\n                </header>\n                <section className=\"login-content\">\n                    <h2>用户登录</h2>\n                    <div>\n                        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                            <Form.Item>\n                                {getFieldDecorator('username', {\n                                    rules: [\n                                        { required: true, message: 'Please input your username!' },\n                                        { min: 4, message: 'at least 4' },\n                                        { max: 12, message: 'most 12' }\n\n                                        ],\n                                })(\n                                    <Input\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        placeholder=\"Username\"\n                                    />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('password', {\n                                    rules: [\n                                        { validator:this.validatorPwd}\n                                        ],\n                                })(\n                                    <Input\n                                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                    />,\n                                )}\n                            </Form.Item>\n                            <Form.Item>\n                                {getFieldDecorator('remember', {\n                                    valuePropName: 'checked',\n                                    initialValue: true,\n                                })(<Checkbox>Remember me</Checkbox>)}\n                                <a className=\"login-form-forgot\" href=\"#\">\n                                    Forgot password\n                                </a>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                    Log in\n                                </Button>\n                                Or <a href=\"\">register now!</a>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </section>\n            </div>\n        )\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create()(Login);\nexport default connect(\n    state=>({user:state.user}),{login}\n)(WrappedNormalLoginForm);","import React from 'react';\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\nimport Admin from \"./pages/admin/admin\"\nimport Login from \"./pages/login/login\"\n\n\nexport default class App extends React.Component {\n  render(){\n      return (\n          <BrowserRouter>\n              <Switch>\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/\" component={Admin} />\n              </Switch>\n          </BrowserRouter>\n      );\n  }\n\n}\n\n\n","import {combineReducers} from \"redux\"\nimport storageUtiles from \"../utils/storageUtiles\";\nimport {SET_HEAD_TITLE, RECEIVE_USER, SHOW_ERROR_MSG} from \"./action-types\"\n\nfunction headTitle (state = '首页',action) {\n    switch (action.type) {\n        case SET_HEAD_TITLE:\n            return action.data\n        default:\n            return state\n    }\n}\n\nconst initUser = storageUtiles.getUser()\n\nfunction user (state = initUser,action) {\n    switch (action.type) {\n        case RECEIVE_USER:\n            return action.user\n        case SHOW_ERROR_MSG:\n            const errorMsg = action.errorMsg\n            return {...state,errorMsg}\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({headTitle,user})","//1 xian xie store\nimport {createStore,applyMiddleware} from \"redux\"\nimport reducer from \"./reducer\"\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\"\n\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport storageUtiles from \"./utils/storageUtiles\";\nimport memoryUtils from \"./utils/memoryUtils\";\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\n\nconst user = storageUtiles.getUser()\nmemoryUtils.user = user;\n\nReactDOM.render((<Provider store={store}><App /></Provider>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}