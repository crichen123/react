{"ast":null,"code":"import\"antd/es/input/style/css\";import _Input from\"antd/es/input\";import _classCallCheck from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/inherits\";import\"antd/es/tree/style/css\";import _Tree from\"antd/es/tree\";import\"antd/es/form/style/css\";import _Form from\"antd/es/form\";import React from\"react\";import menuList from\"../../config/menuConfig\";var Item=_Form.Item;var TreeNode=_Tree.TreeNode;var AuthForm=/*#__PURE__*/function(_React$Component){_inherits(AuthForm,_React$Component);function AuthForm(props){var _this;_classCallCheck(this,AuthForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(AuthForm).call(this,props));_this.getTreeNodes=function(menuList){return menuList.reduce(function(pre,item){pre.push(React.createElement(TreeNode,{title:item.title,key:item.key},item.children?_this.getTreeNodes(item.children):null));return pre;},[]);};_this.onCheck=function(checkedKeys){_this.setState({checkedKeys:checkedKeys});};_this.getMenus=function(){return _this.state.checkedKeys;};var menus=_this.props.role.menus;console.log(menus);_this.state={checkedKeys:menus};return _this;}_createClass(AuthForm,[{key:\"componentWillMount\",value:function componentWillMount(){this.treeNodes=this.getTreeNodes(menuList);}},{key:\"render\",value:function render(){var role=this.props.role;var checkedKeys=this.state.checkedKeys;var formItemLayout={labelCol:{span:4},wrapperCol:{span:15}};return React.createElement(\"div\",null,React.createElement(Item,Object.assign({label:\"\\u89D2\\u8272\\u540D\\u79F0\"},formItemLayout),React.createElement(_Input,{value:role.name,disabled:true})),React.createElement(_Tree,{checkable:true,defaultExpandAll:true,checkedKeys:checkedKeys,onCheck:this.onCheck},React.createElement(TreeNode,{title:\"\\u5E73\\u53F0\\u6743\\u9650\",key:\"all\"},this.treeNodes)));}}]);return AuthForm;}(React.Component);export{AuthForm as default};","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/role/auth-form.jsx"],"names":["React","menuList","Item","TreeNode","AuthForm","props","getTreeNodes","reduce","pre","item","push","title","key","children","onCheck","checkedKeys","setState","getMenus","state","menus","role","console","log","treeNodes","formItemLayout","labelCol","span","wrapperCol","name","Component"],"mappings":"2yBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CAEA,GAAMC,CAAAA,IAAI,CAAG,MAAKA,IAAlB,C,GACQC,CAAAA,Q,OAAAA,Q,IAGaC,CAAAA,Q,8EAOjB,kBAAYC,KAAZ,CAAmB,0CACf,0EAAMA,KAAN,GADe,MASnBC,YATmB,CASJ,SAACL,QAAD,CAAa,CACxB,MAAOA,CAAAA,QAAQ,CAACM,MAAT,CAAgB,SAACC,GAAD,CAAKC,IAAL,CAAY,CAC/BD,GAAG,CAACE,IAAJ,CAAS,oBAAC,QAAD,EAAU,KAAK,CAAED,IAAI,CAACE,KAAtB,CAA6B,GAAG,CAAEF,IAAI,CAACG,GAAvC,EACJH,IAAI,CAACI,QAAL,CAAc,MAAKP,YAAL,CAAkBG,IAAI,CAACI,QAAvB,CAAd,CAA+C,IAD3C,CAAT,EAGA,MAAOL,CAAAA,GAAP,CACH,CALM,CAKL,EALK,CAAP,CAMH,CAhBkB,OAkBnBM,OAlBmB,CAkBT,SAAAC,WAAW,CAAG,CACpB,MAAKC,QAAL,CAAc,CACVD,WAAW,CAAXA,WADU,CAAd,EAGH,CAtBkB,OAwBnBE,QAxBmB,CAwBR,iBAAM,OAAKC,KAAL,CAAWH,WAAjB,EAxBQ,IAERI,CAAAA,KAFQ,CAEC,MAAKd,KAAL,CAAWe,IAFZ,CAERD,KAFQ,CAGfE,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA,MAAKD,KAAL,CAAa,CACTH,WAAW,CAACI,KADH,CAAb,CAJe,aAOlB,C,oFAmBoB,CACjB,KAAKI,SAAL,CAAiB,KAAKjB,YAAL,CAAkBL,QAAlB,CAAjB,CACH,C,uCAGO,IACGmB,CAAAA,IADH,CACW,KAAKf,KADhB,CACGe,IADH,IAEGL,CAAAA,WAFH,CAEkB,KAAKG,KAFvB,CAEGH,WAFH,CAGJ,GAAMS,CAAAA,cAAc,CAAG,CACnBC,QAAQ,CAAE,CAAEC,IAAI,CAAE,CAAR,CADS,CAEnBC,UAAU,CAAE,CAAED,IAAI,CAAE,EAAR,CAFO,CAAvB,CAKA,MACI,gCACI,oBAAC,IAAD,gBAAM,KAAK,CAAC,0BAAZ,EAAuBF,cAAvB,EACI,4BAAO,KAAK,CAAGJ,IAAI,CAACQ,IAApB,CAA0B,QAAQ,KAAlC,EADJ,CADJ,CAKI,2BACI,SAAS,KADb,CAEI,gBAAgB,CAAE,IAFtB,CAGI,WAAW,CAAEb,WAHjB,CAII,OAAO,CAAE,KAAKD,OAJlB,EAMI,oBAAC,QAAD,EAAU,KAAK,CAAC,0BAAhB,CAAuB,GAAG,CAAC,KAA3B,EACK,KAAKS,SADV,CANJ,CALJ,CADJ,CAmBH,C,sBAjEiCvB,KAAK,CAAC6B,S,SAAvBzB,Q","sourcesContent":["import React from \"react\";\nimport {Form,Input,Tree} from \"antd\"\nimport PropTypes from \"prop-types\"\nimport menuList from \"../../config/menuConfig\";\n\nconst Item = Form.Item\nconst { TreeNode } = Tree;\n\n\nexport default class AuthForm extends React.Component{\n\n    static propTypes = {\n        role:PropTypes.object.isRequired,\n    }\n\n\n    constructor(props) {\n        super(props);\n        const {menus} = this.props.role\n        console.log(menus)\n        this.state = {\n            checkedKeys:menus\n        }\n    }\n\n    getTreeNodes = (menuList) =>{\n        return menuList.reduce((pre,item)=>{\n            pre.push(<TreeNode title={item.title} key={item.key}  >\n                {item.children?this.getTreeNodes(item.children):null}\n            </TreeNode>)\n            return pre\n        },[])\n    }\n\n    onCheck = checkedKeys =>{\n        this.setState({\n            checkedKeys\n        })\n    }\n\n    getMenus = () => this.state.checkedKeys\n\n    componentWillMount() {\n        this.treeNodes = this.getTreeNodes(menuList)\n    }\n\n\n    render(){\n        const {role} = this.props\n        const {checkedKeys} = this.state\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 15},\n        };\n\n        return (\n            <div >\n                <Item label=\"角色名称\" {...formItemLayout}>\n                    <Input value ={role.name} disabled />\n                </Item>\n\n                <Tree\n                    checkable\n                    defaultExpandAll={true}\n                    checkedKeys={checkedKeys}\n                    onCheck={this.onCheck}\n                >\n                    <TreeNode title=\"平台权限\" key=\"all\">\n                        {this.treeNodes}\n                    </TreeNode>\n                </Tree>\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}