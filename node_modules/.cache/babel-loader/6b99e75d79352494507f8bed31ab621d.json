{"ast":null,"code":"import \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/components/header/header.jsx\";\nimport React from 'react';\nimport \"./index.less\";\nimport { formateDate } from \"../../utils/dateUtils\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport { reqWeather } from \"../../api\";\nimport { withRouter } from 'react-router-dom';\nimport menuList from \"../../config/menuConfig\";\n\nclass HeaderContent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTime: formateDate(Date.now()),\n      dayPictureUrl: '',\n      weather: ''\n    };\n\n    this.getTime = () => {\n      setInterval(() => {\n        const currentTime = formateDate(Date.now());\n        this.setState({\n          currentTime\n        });\n      }, 1000);\n    };\n\n    this.getWeather = async () => {\n      const {\n        dayPictureUrl,\n        weather\n      } = await reqWeather('西安');\n      this.setState({\n        dayPictureUrl,\n        weather\n      });\n    };\n\n    this.getTitle = () => {\n      let title;\n      const path = this.props.location.pathname;\n      menuList.forEach(item => {\n        if (item.key === path) {\n          title = item.title;\n        } else if (item.children) {\n          const cItem = item.children.find(cItem => cItem.key === path);\n\n          if (cItem) {\n            title = cItem.title;\n          }\n        }\n      });\n      return title;\n    };\n\n    this.Logout = () => {\n      _Modal.confirm({});\n    };\n  }\n\n  componentDidMount() {\n    this.getTime();\n    this.getWeather();\n  }\n\n  render() {\n    const {\n      currentTime,\n      dayPictureUrl,\n      weather\n    } = this.state;\n    const user = memoryUtils.user.username;\n    const title = this.getTitle();\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\u6B22\\u8FCE\\uFF0C\", user), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\u9000\\u51FA\")), React.createElement(\"div\", {\n      className: \"header-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-bottom-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"header-bottom-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, currentTime), React.createElement(\"img\", {\n      src: dayPictureUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, weather))));\n  }\n\n}\n\nexport default withRouter(HeaderContent);","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/components/header/header.jsx"],"names":["React","formateDate","memoryUtils","reqWeather","withRouter","menuList","HeaderContent","Component","state","currentTime","Date","now","dayPictureUrl","weather","getTime","setInterval","setState","getWeather","getTitle","title","path","props","location","pathname","forEach","item","key","children","cItem","find","Logout","confirm","componentDidMount","render","user","username"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./index.less\"\nimport {formateDate} from \"../../utils/dateUtils\"\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport {reqWeather} from \"../../api\";\nimport {withRouter} from 'react-router-dom'\nimport menuList from \"../../config/menuConfig\";\nimport { Modal, Button } from 'antd';\n\nclass HeaderContent extends React.Component{\n    state = {\n        currentTime:formateDate(Date.now()),\n        dayPictureUrl:'',\n        weather:''\n    }\n    getTime=()=>{\n        setInterval(()=>{\n            const currentTime = formateDate(Date.now())\n            this.setState({currentTime})\n        },1000)\n    }\n\n    getWeather = async() => {\n        const {dayPictureUrl,weather} = await reqWeather('西安')\n        this.setState({dayPictureUrl,weather})\n    }\n\n    getTitle = () =>{\n        let title;\n        const path = this.props.location.pathname\n        menuList.forEach(item=>{\n            if(item.key===path){\n               title = item.title\n            }else if(item.children){\n                const cItem = item.children.find(cItem=>cItem.key===path);\n                if(cItem){\n                    title = cItem.title;\n                }\n            }\n        })\n        return title;\n    }\n\n    Logout= () =>{\n        Modal.confirm({\n            \n        })\n    }\n\n    componentDidMount() {\n        this.getTime();\n        this.getWeather()\n    }\n\n    render() {\n        const {currentTime,dayPictureUrl,weather} = this.state\n        const user = memoryUtils.user.username;\n        const title = this.getTitle();\n        return (\n            <div className=\"header\">\n               <div className=\"header-top\">\n                   <span>欢迎，{user}</span>\n                   <a >退出</a>\n               </div>\n                <div className=\"header-bottom\">\n                    <div className=\"header-bottom-left\">{title}</div>\n                    <div className=\"header-bottom-right\">\n                        <span>{currentTime}</span>\n                        <img src={dayPictureUrl} />\n                        <span>{weather}</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default  withRouter(HeaderContent)"]},"metadata":{},"sourceType":"module"}