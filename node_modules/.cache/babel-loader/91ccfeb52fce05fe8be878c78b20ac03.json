{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/cascader/style/css\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/pages/product/add-update.jsx\";\nimport React from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport { reqCategorys } from \"../../api\";\nimport category from \"../category/category\";\nconst {\n  Item\n} = _Form;\nconst {\n  TextArea\n} = _Input;\nconst options = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  isLeaf: false\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  isLeaf: false\n}, {\n  value: 'jiangsu2',\n  label: 'Jiangsu2',\n  isLeaf: true\n}];\n\nclass ProductAddUpdate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options: []\n    };\n\n    this.submit = () => {\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"ok\");\n        }\n      });\n    };\n\n    this.validattorPrice = (rule, value, callback) => {\n      if (value * 1 > 0) {\n        callback();\n      } else {\n        callback(\"价格格式不对\");\n      }\n    };\n\n    this.getCategory = async parentId => {\n      const result = await reqCategorys(parentId);\n      console.log(result.data.status);\n\n      if (result.data.status === \"0\") {\n        const categorys = result.data.data;\n\n        if (parentId === \"0\") {\n          this.initOptions(categorys);\n        } else {\n          return categorys;\n        }\n      }\n    };\n\n    this.initOptions = async catagerys => {\n      const options = catagerys.map(c => ({\n        value: c._id,\n        label: c.name,\n        isLeaf: false\n      }));\n      const {\n        isUpdate,\n        product\n      } = this;\n      const {\n        pCategoryId,\n        categoryId\n      } = product;\n\n      if (isUpdate && pCategoryId !== '0') {\n        const subCategorys = await this.getCategory(pCategoryId);\n        const childOptions = subCategorys.map(c => ({\n          value: c._id,\n          label: c.name,\n          isLeaf: false\n        }));\n      }\n\n      console.log(options);\n      this.setState({\n        options\n      });\n      const targetOption = options.find(option => option.value === pCategoryId);\n      targetOption.children = childOptions;\n    };\n\n    this.loadData = async selectedOptions => {\n      const targetOption = selectedOptions[0];\n      targetOption.loading = true;\n      const subCategory = await this.getCategory(targetOption.value);\n      targetOption.loading = false;\n\n      if (subCategory && subCategory.length > 0) {\n        const childOptions = subCategory.map(c => ({\n          value: c._id,\n          label: c.name,\n          isLeaf: true\n        }));\n        targetOption.children = childOptions;\n      } else {\n        targetOption.isLeaf = true;\n      } // setTimeout(() => {\n      //     targetOption.loading = false;\n      //     targetOption.children = [\n      //         {\n      //             label: `${targetOption.label} Dynamic 1`,\n      //             value: 'dynamic1',\n      //         },\n      //         {\n      //             label: `${targetOption.label} Dynamic 2`,\n      //             value: 'dynamic2',\n      //         },\n      //     ];\n\n\n      this.setState({\n        options: [...this.state.options]\n      }); // }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.getCategory('0');\n  }\n\n  componentWillMount() {\n    const product = this.props.location.state;\n    this.isUpdate = !!product;\n    this.product = product || {};\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const {\n      isUpdate,\n      product\n    } = this;\n    const {\n      pCategoryId,\n      categoryId\n    } = product;\n    const categoryIds = [];\n\n    if (isUpdate) {\n      if (pCategoryId === '0') {\n        categoryIds.push(categoryId);\n      } else {\n        categoryIds.push(pCategoryId);\n        categoryIds.push(categoryId);\n      }\n    }\n\n    const title = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(LinkButton, {\n      onClick: () => this.props.history.goBack(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"arrow-left\",\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, isUpdate ? '修改商品' : '添加商品'));\n    const formItemLayout = {\n      labelCol: {\n        span: 2\n      },\n      wrapperCol: {\n        span: 8\n      }\n    };\n    return React.createElement(_Card, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u540D\\u79F0:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: product.name,\n      rules: [{\n        required: true,\n        message: \"请输入商品名称\"\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u63CF\\u8FF0:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, getFieldDecorator('desc', {\n      initialValue: product.desc,\n      rules: [{\n        required: true,\n        message: \"请输入商品描述\"\n      }]\n    })(React.createElement(TextArea, {\n      placeholder: \"\\u5546\\u54C1\\u63CF\\u8FF0\",\n      autoSize: {\n        minRows: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u4EF7\\u683C:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, getFieldDecorator('price', {\n      initialValue: product.price,\n      rules: [{\n        required: true,\n        message: \"请输入商品描述\"\n      }, {\n        validator: this.validattorPrice\n      }]\n    })(React.createElement(_Input, {\n      type: \"number\",\n      addonAfter: \"\\u5143\",\n      placeholder: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u5206\\u7C7B:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"\\u5546\\u54C1\\u5206\\u7C7B\")), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u5206\\u7C7B:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, getFieldDecorator('categoryIds', {\n      initialValue: categoryIds,\n      rules: [{\n        required: true,\n        message: \"请输入商品分类\"\n      }]\n    })(React.createElement(_Cascader, {\n      options: this.state.options,\n      loadData: this.loadData,\n      onChange: this.onChange,\n      changeOnSelect: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u5206\\u7C7B:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"\\u5546\\u54C1\\u8BE6\\u60C5\")), React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"))));\n  }\n\n}\n\nexport default _Form.create()(ProductAddUpdate);","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/product/add-update.jsx"],"names":["React","LinkButton","reqCategorys","category","Item","TextArea","options","value","label","isLeaf","ProductAddUpdate","Component","state","submit","props","form","validateFields","err","values","console","log","validattorPrice","rule","callback","getCategory","parentId","result","data","status","categorys","initOptions","catagerys","map","c","_id","name","isUpdate","product","pCategoryId","categoryId","subCategorys","childOptions","setState","targetOption","find","option","children","loadData","selectedOptions","loading","subCategory","length","componentDidMount","componentWillMount","location","render","getFieldDecorator","categoryIds","push","title","history","goBack","fontSize","formItemLayout","labelCol","span","wrapperCol","initialValue","rules","required","message","desc","minRows","price","validator","onChange","create"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,YAAR,QAA2B,WAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,MAAM;AAACC,EAAAA;AAAD,SAAN;AACA,MAAM;AAACC,EAAAA;AAAD,UAAN;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,UADX;AAEIC,EAAAA,KAAK,EAAE,UAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CADY,EAMZ;AACIF,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,KAAK,EAAE,SAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CANY,EAWZ;AACIF,EAAAA,KAAK,EAAE,UADX;AAEIC,EAAAA,KAAK,EAAE,UAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CAXY,CAAhB;;AAkBA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;AAAA;AAAA;AAAA,SAE3CC,KAF2C,GAEnC;AACJN,MAAAA,OAAO,EAAC;AADJ,KAFmC;;AAAA,SAM3CO,MAN2C,GAMlC,MAAK;AACV,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAKC,MAAL,KAAc;AACzC,YAAG,CAACD,GAAJ,EAAQ;AACJE,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;AACJ,OAJD;AAKH,KAZ0C;;AAAA,SAc3CC,eAd2C,GAczB,CAACC,IAAD,EAAMf,KAAN,EAAYgB,QAAZ,KAAwB;AACtC,UAAGhB,KAAK,GAAC,CAAN,GAAQ,CAAX,EAAa;AACTgB,QAAAA,QAAQ;AACX,OAFD,MAEK;AACDA,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;AAEJ,KArB0C;;AAAA,SAuB3CC,WAvB2C,GAuB7B,MAAMC,QAAN,IAAkB;AAC5B,YAAMC,MAAM,GAAI,MAAMxB,YAAY,CAACuB,QAAD,CAAlC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACC,IAAP,CAAYC,MAAxB;;AACA,UAAGF,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,GAA1B,EAA8B;AAC1B,cAAMC,SAAS,GAAGH,MAAM,CAACC,IAAP,CAAYA,IAA9B;;AACA,YAAGF,QAAQ,KAAK,GAAhB,EAAoB;AAChB,eAAKK,WAAL,CAAiBD,SAAjB;AACH,SAFD,MAEK;AACD,iBAAOA,SAAP;AACH;AAEJ;AACJ,KAnC0C;;AAAA,SAqC3CC,WArC2C,GAqC9B,MAAOC,SAAP,IAAoB;AAC9B,YAAMzB,OAAO,GAAGyB,SAAS,CAACC,GAAV,CAAcC,CAAC,KAAG;AAC7B1B,QAAAA,KAAK,EAAE0B,CAAC,CAACC,GADoB;AAE7B1B,QAAAA,KAAK,EAAEyB,CAAC,CAACE,IAFoB;AAG7B1B,QAAAA,MAAM,EAAE;AAHqB,OAAH,CAAf,CAAhB;AAMC,YAAM;AAAC2B,QAAAA,QAAD;AAAUC,QAAAA;AAAV,UAAqB,IAA3B;AACA,YAAM;AAACC,QAAAA,WAAD;AAAaC,QAAAA;AAAb,UAA0BF,OAAhC;;AACA,UAAGD,QAAQ,IAAIE,WAAW,KAAK,GAA/B,EAAmC;AAChC,cAAME,YAAY,GAAG,MAAM,KAAKhB,WAAL,CAAiBc,WAAjB,CAA3B;AACC,cAAMG,YAAY,GAAGD,YAAY,CAACR,GAAb,CAAiBC,CAAC,KAAG;AACtC1B,UAAAA,KAAK,EAAE0B,CAAC,CAACC,GAD6B;AAEtC1B,UAAAA,KAAK,EAAEyB,CAAC,CAACE,IAF6B;AAGtC1B,UAAAA,MAAM,EAAE;AAH8B,SAAH,CAAlB,CAArB;AAOH;;AACDU,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACA,WAAKoC,QAAL,CAAc;AACVpC,QAAAA;AADU,OAAd;AAGA,YAAMqC,YAAY,GAAGrC,OAAO,CAACsC,IAAR,CAAaC,MAAM,IAAEA,MAAM,CAACtC,KAAP,KAAiB+B,WAAtC,CAArB;AACAK,MAAAA,YAAY,CAACG,QAAb,GAAwBL,YAAxB;AACH,KA9D0C;;AAAA,SAiE3CM,QAjE2C,GAiE/B,MAAMC,eAAN,IAAyB;AACjC,YAAML,YAAY,GAAGK,eAAe,CAAC,CAAD,CAApC;AACAL,MAAAA,YAAY,CAACM,OAAb,GAAuB,IAAvB;AAEA,YAAMC,WAAW,GAAI,MAAM,KAAK1B,WAAL,CAAiBmB,YAAY,CAACpC,KAA9B,CAA3B;AACAoC,MAAAA,YAAY,CAACM,OAAb,GAAuB,KAAvB;;AACA,UAAGC,WAAW,IAAIA,WAAW,CAACC,MAAZ,GAAmB,CAArC,EAAuC;AAChC,cAAMV,YAAY,GAAGS,WAAW,CAAClB,GAAZ,CAAgBC,CAAC,KAAG;AACpC1B,UAAAA,KAAK,EAAE0B,CAAC,CAACC,GAD2B;AAEpC1B,UAAAA,KAAK,EAAEyB,CAAC,CAACE,IAF2B;AAGpC1B,UAAAA,MAAM,EAAE;AAH4B,SAAH,CAAjB,CAArB;AAKHkC,QAAAA,YAAY,CAACG,QAAb,GAAwBL,YAAxB;AACH,OAPD,MAOK;AACDE,QAAAA,YAAY,CAAClC,MAAb,GAAsB,IAAtB;AACH,OAfgC,CAgBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,WAAKiC,QAAL,CAAc;AACVpC,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKM,KAAL,CAAWN,OAAf;AADC,OAAd,EA5B6B,CA+BjC;AACH,KAjG0C;AAAA;;AAoG3C8C,EAAAA,iBAAiB,GAAG;AAChB,SAAK5B,WAAL,CAAiB,GAAjB;AACH;;AAED6B,EAAAA,kBAAkB,GAAG;AACjB,UAAMhB,OAAO,GAAG,KAAKvB,KAAL,CAAWwC,QAAX,CAAoB1C,KAApC;AACA,SAAKwB,QAAL,GAAgB,CAAC,CAACC,OAAlB;AACA,SAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACH;;AAGDkB,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAuB,KAAK1C,KAAL,CAAWC,IAAxC;AACA,UAAM;AAACqB,MAAAA,QAAD;AAAUC,MAAAA;AAAV,QAAqB,IAA3B;AACA,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAA2BF,OAAjC;AACA,UAAMoB,WAAW,GAAG,EAApB;;AAEA,QAAGrB,QAAH,EAAY;AACR,UAAGE,WAAW,KAAK,GAAnB,EAAuB;AACnBmB,QAAAA,WAAW,CAACC,IAAZ,CAAiBnB,UAAjB;AACH,OAFD,MAEK;AACDkB,QAAAA,WAAW,CAACC,IAAZ,CAAiBpB,WAAjB;AACAmB,QAAAA,WAAW,CAACC,IAAZ,CAAiBnB,UAAjB;AACH;AAEJ;;AAED,UAAMoB,KAAK,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAI,KAAK7C,KAAL,CAAW8C,OAAX,CAAmBC,MAAnB,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO1B,QAAQ,GAAC,MAAD,GAAQ,MAAvB,CAJJ,CADJ;AASA,UAAM2B,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADS;AAEnBC,MAAAA,UAAU,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFO,KAAvB;AAMA,WACI;AAAM,MAAA,KAAK,EAAEN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,6CAAUI,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,2BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQP,iBAAiB,CAAC,MAAD,EAAQ;AACrBW,MAAAA,YAAY,EAAC9B,OAAO,CAACF,IADA;AAErBiC,MAAAA,KAAK,EAAC,CACF;AAACC,QAAAA,QAAQ,EAAC,IAAV;AAAeC,QAAAA,OAAO,EAAC;AAAvB,OADE;AAFe,KAAR,CAAjB,CAMI;AAAO,MAAA,WAAW,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFR,CADJ,EAaI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,2BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQd,iBAAiB,CAAC,MAAD,EAAQ;AACrBW,MAAAA,YAAY,EAAC9B,OAAO,CAACkC,IADA;AAErBH,MAAAA,KAAK,EAAC,CACF;AAACC,QAAAA,QAAQ,EAAC,IAAV;AAAeC,QAAAA,OAAO,EAAC;AAAvB,OADE;AAFe,KAAR,CAAjB,CAMI,oBAAC,QAAD;AAAW,MAAA,WAAW,EAAC,0BAAvB;AAA8B,MAAA,QAAQ,EAAG;AAACE,QAAAA,OAAO,EAAC;AAAT,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFR,CAbJ,EA0BI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,2BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQhB,iBAAiB,CAAC,OAAD,EAAS;AACtBW,MAAAA,YAAY,EAAC9B,OAAO,CAACoC,KADC;AAEtBL,MAAAA,KAAK,EAAC,CACF;AAACC,QAAAA,QAAQ,EAAC,IAAV;AAAeC,QAAAA,OAAO,EAAC;AAAvB,OADE,EAEF;AAACI,QAAAA,SAAS,EAAC,KAAKrD;AAAhB,OAFE;AAFgB,KAAT,CAAjB,CAOI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,UAAU,EAAC,QAAhC;AAAoC,MAAA,WAAW,EAAC,0BAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAFR,CA1BJ,EAuCI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,2BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CAvCJ,EA0CI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,2BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQmC,iBAAiB,CAAC,aAAD,EAAe;AAC5BW,MAAAA,YAAY,EAACV,WADe;AAE5BW,MAAAA,KAAK,EAAC,CACF;AAACC,QAAAA,QAAQ,EAAC,IAAV;AAAeC,QAAAA,OAAO,EAAC;AAAvB,OADE;AAFsB,KAAf,CAAjB,CAMI;AACI,MAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWN,OADxB;AAEI,MAAA,QAAQ,EAAE,KAAKyC,QAFnB;AAGI,MAAA,QAAQ,EAAE,KAAK4B,QAHnB;AAII,MAAA,cAAc,MAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFR,CA1CJ,EA6DI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,2BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CA7DJ,EAgEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAK9D,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAhEJ,CADJ,CADJ;AAwEH;;AAtN0C;;AAyN/C,eAAe,MAAK+D,MAAL,GAAclE,gBAAd,CAAf","sourcesContent":["import React from 'react'\nimport {Card,Form,Input,Cascader,Upload,Button,Icon} from \"antd\"\nimport LinkButton from \"../../components/link-button\";\nimport {reqCategorys} from \"../../api\"\nimport category from \"../category/category\";\n\nconst {Item} = Form\nconst {TextArea} = Input\n\nconst options = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        isLeaf: false,\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        isLeaf: false,\n    },\n    {\n        value: 'jiangsu2',\n        label: 'Jiangsu2',\n        isLeaf: true,\n    },\n];\n\nclass ProductAddUpdate extends React.Component {\n\n    state = {\n        options:[],\n    };\n\n    submit = () =>{\n        this.props.form.validateFields((err,values)=>{\n            if(!err){\n                console.log(\"ok\")\n            }\n        })\n    }\n\n    validattorPrice = (rule,value,callback) =>{\n        if(value*1>0){\n            callback()\n        }else{\n            callback(\"价格格式不对\")\n        }\n\n    }\n\n    getCategory = async(parentId) =>{\n        const result  = await reqCategorys(parentId)\n        console.log(result.data.status);\n        if(result.data.status === \"0\"){\n            const categorys = result.data.data\n            if(parentId === \"0\"){\n                this.initOptions(categorys)\n            }else{\n                return categorys\n            }\n\n        }\n    }\n\n    initOptions =async (catagerys) =>{\n       const options = catagerys.map(c=>({\n            value: c._id,\n            label: c.name,\n            isLeaf: false,\n        }))\n\n        const {isUpdate,product} = this\n        const {pCategoryId,categoryId} =product\n        if(isUpdate && pCategoryId !== '0'){\n           const subCategorys = await this.getCategory(pCategoryId)\n            const childOptions = subCategorys.map(c=>({\n                value: c._id,\n                label: c.name,\n                isLeaf: false,\n            }))\n\n\n        }\n        console.log(options)\n        this.setState({\n            options\n        })\n        const targetOption = options.find(option=>option.value === pCategoryId)\n        targetOption.children = childOptions\n    }\n\n\n    loadData =  async selectedOptions => {\n        const targetOption = selectedOptions[0];\n        targetOption.loading = true;\n\n        const subCategory =  await this.getCategory(targetOption.value)\n        targetOption.loading = false;\n        if(subCategory && subCategory.length>0){\n               const childOptions = subCategory.map(c=>({\n                    value: c._id,\n                    label: c.name,\n                    isLeaf: true,\n                }))\n            targetOption.children = childOptions\n        }else{\n            targetOption.isLeaf = true;\n        }\n        // setTimeout(() => {\n        //     targetOption.loading = false;\n        //     targetOption.children = [\n        //         {\n        //             label: `${targetOption.label} Dynamic 1`,\n        //             value: 'dynamic1',\n        //         },\n        //         {\n        //             label: `${targetOption.label} Dynamic 2`,\n        //             value: 'dynamic2',\n        //         },\n        //     ];\n            this.setState({\n                options: [...this.state.options],\n            });\n        // }, 1000);\n    };\n\n\n    componentDidMount() {\n        this.getCategory('0')\n    }\n\n    componentWillMount() {\n        const product = this.props.location.state\n        this.isUpdate = !!product\n        this.product = product || {}\n    }\n\n\n    render(){\n        const {getFieldDecorator } = this.props.form\n        const {isUpdate,product} = this\n        const {pCategoryId,categoryId} = product\n        const categoryIds = [];\n\n        if(isUpdate){\n            if(pCategoryId === '0'){\n                categoryIds.push(categoryId)\n            }else{\n                categoryIds.push(pCategoryId)\n                categoryIds.push(categoryId)\n            }\n\n        }\n\n        const title = (\n            <span>\n                <LinkButton onClick={()=>this.props.history.goBack()}>\n                    <Icon type=\"arrow-left\" style={{fontSize:20}}/>\n                </LinkButton>\n                <span>{isUpdate?'修改商品':'添加商品'}</span>\n            </span>\n        )\n\n        const formItemLayout = {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 8},\n        };\n\n\n        return (\n            <Card title={title}>\n                <Form {...formItemLayout}>\n                    <Item label=\"商品名称:\">\n                        {\n                            getFieldDecorator('name',{\n                                initialValue:product.name,\n                                rules:[\n                                    {required:true,message:\"请输入商品名称\"}\n                                ]\n                            })(\n                                <Input placeholder=\"商品名称\"></Input>\n                            )\n                        }\n                    </Item>\n                    <Item label=\"商品描述:\">\n                        {\n                            getFieldDecorator('desc',{\n                                initialValue:product.desc,\n                                rules:[\n                                    {required:true,message:\"请输入商品描述\"}\n                                ]\n                            })(\n                                <TextArea  placeholder=\"商品描述\" autoSize ={{minRows:2}} />\n                            )\n                        }\n\n                    </Item>\n                    <Item label=\"商品价格:\">\n                        {\n                            getFieldDecorator('price',{\n                                initialValue:product.price,\n                                rules:[\n                                    {required:true,message:\"请输入商品描述\"},\n                                    {validator:this.validattorPrice}\n                                ]\n                            })(\n                                <Input type=\"number\" addonAfter=\"元\" placeholder=\"商品价格\"></Input>\n                            )\n                        }\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        <div>商品分类</div>\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        {\n                            getFieldDecorator('categoryIds',{\n                                initialValue:categoryIds,\n                                rules:[\n                                    {required:true,message:\"请输入商品分类\"}\n                                ]\n                            })(\n                                <Cascader\n                                    options={this.state.options}\n                                    loadData={this.loadData}\n                                    onChange={this.onChange}\n                                    changeOnSelect\n                                />\n                            )\n                        }\n\n\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        <div>商品详情</div>\n                    </Item>\n                    <Item>\n                        <Button type=\"primary\" onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\n\nexport default Form.create()(ProductAddUpdate);"]},"metadata":{},"sourceType":"module"}