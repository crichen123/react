{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/pages/product/home.jsx\";\nimport React from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport { reqProducts } from \"../../api\";\nconst Option = _Select.Option;\nexport default class ProductHome extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      total: 0\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '商品名称',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '商品描述',\n        dataIndex: 'desc',\n        key: 'age'\n      }, {\n        title: '价格',\n        dataIndex: 'price',\n        render: price => \"￥\" + price\n      }, {\n        width: 100,\n        title: '状态',\n        dataIndex: 'status',\n        render: status => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            type: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, \"\\u4E0B\\u67B6\"), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"\\u5728\\u552E\"));\n        }\n      }, {\n        width: 100,\n        title: '操作',\n        render: product => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(LinkButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"\\u8BE6\\u60C5\"), React.createElement(LinkButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"\\u4FEE\\u6539\"));\n        }\n      }];\n    };\n\n    this.getProducts = async pageNum => {\n      const result = await reqProducts(pageNum, 2);\n\n      if (result.data.status == 0) {\n        const {\n          total,\n          list\n        } = result.data;\n        this.setState({\n          total,\n          products: list\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getProducts(1);\n  }\n\n  render() {\n    const {\n      products\n    } = this.state;\n    const title = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(_Select, {\n      value: \"1\",\n      style: {\n        width: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\u6309\\u540D\\u79F0\\u641C\\u7D22\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\u6309\\u63CF\\u8FF0\\u641C\\u7D22\")), React.createElement(_Input, {\n      placeholder: \"\\u5173\\u952E\\u5B57\",\n      style: {\n        width: 150,\n        margin: '0 15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\u641C\\u7D22\"));\n    const extra = React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \"\\u6DFB\\u52A0\\u5546\\u54C1\");\n    return React.createElement(_Card, {\n      title: title,\n      extra: extra,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      rowKey: \"_id\",\n      dataSource: products,\n      columns: this.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), \";\");\n  }\n\n}","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/product/home.jsx"],"names":["React","LinkButton","reqProducts","Option","ProductHome","Component","state","products","total","initColumns","columns","title","dataIndex","key","render","price","width","status","product","getProducts","pageNum","result","data","list","setState","componentWillMount","componentDidMount","margin","extra"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Table,Card,Select,Input,Button,Icon} from \"antd\"\nimport LinkButton from \"../../components/link-button\";\nimport {reqProducts} from \"../../api\";\n\nconst Option = Select.Option;\n\nexport default class ProductHome extends React.Component {\n\n    state = {\n        products:[],\n        total:0\n\n    }\n\n    initColumns = () =>{\n        this.columns = [\n            {\n                title: '商品名称',\n                dataIndex: 'name',\n                key: 'name',\n            },\n            {\n                title: '商品描述',\n                dataIndex: 'desc',\n                key: 'age',\n            },\n            {\n                title: '价格',\n                dataIndex: 'price',\n                render: (price)=>\"￥\"+price,\n            }, {\n                width:100,\n                title: '状态',\n                dataIndex: 'status',\n                render: (status)=>{\n                    return (\n                        <span>\n                            <Button type=\"primary\" >下架</Button>\n                        <span>在售</span>\n                    </span>)\n                },\n            },{\n                width:100,\n                title: '操作',\n                render: (product)=>{\n                    return (\n                        <span>\n                            <LinkButton>详情</LinkButton>\n                            <LinkButton>修改</LinkButton>\n                    </span>)\n                },\n            },\n        ];\n    }\n\n    getProducts = async(pageNum) =>{\n        const result = await reqProducts(pageNum,2);\n        if(result.data.status == 0){\n            const {total,list} = result.data;\n            this.setState({\n                total,\n                products:list\n            })\n        }\n    }\n\n    componentWillMount() {\n        this.initColumns()\n    }\n\n    componentDidMount() {\n        this.getProducts(1)\n    }\n\n    render(){\n        const {products} = this.state;\n\n        const title = (\n            <span>\n                <Select value=\"1\" style={{width:150}}>\n                    <Option value=\"0\">按名称搜索</Option>\n                    <Option value=\"1\">按描述搜索</Option>\n                </Select>\n                <Input placeholder=\"关键字\" style={{width:150,margin:'0 15px'}}/>\n                <Button type=\"primary\">搜索</Button>\n            </span>);\n\n        const extra = (<Button type=\"primary\">\n            <Icon type=\"plus\"></Icon>\n            添加商品\n        </Button>);\n\n\n\n\n\n        return (\n            <Card title={title} extra={extra}>\n                <Table\n                    bordered\n                    rowKey=\"_id\"\n                    dataSource={products}\n                    columns={this.columns} />;\n            </Card>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}