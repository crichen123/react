{"ast":null,"code":"var _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/pages/product/rich-text-editor.jsx\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport PropTypes from \"prop-types\";\nexport default class RichTextEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n\n    this.getDetail = () => {\n      return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\n    };\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    const html = this.props.detail;\n\n    if (html) {\n      const contentBlock = htmlToDraft(html);\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    } else {\n      this.state = {\n        editorState: EditorState.createEmpty()\n      };\n    }\n  }\n\n  render() {\n    const {\n      editorState\n    } = this.state;\n    return React.createElement(Editor, {\n      editorState: editorState,\n      editorStyle: {\n        border: '1px solid black',\n        minHeight: 200,\n        paddingLeft: 10\n      },\n      onEditorStateChange: this.onEditorStateChange,\n      toolbar: {\n        image: {\n          uploadCallback: this.uploadImageCallback,\n          alt: {\n            present: true,\n            mandatory: true\n          }\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n}\nRichTextEditor.propTypes = {\n  detail: PropTypes.string\n};","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/product/rich-text-editor.jsx"],"names":["React","Component","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","PropTypes","RichTextEditor","constructor","props","state","editorState","createEmpty","getDetail","getCurrentContent","onEditorStateChange","setState","html","detail","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","render","border","minHeight","paddingLeft","image","uploadCallback","uploadImageCallback","alt","present","mandatory","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,QAAwD,UAAxD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,kDAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAgB,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AASnDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SARnBC,KAQmB,GARX;AACJC,MAAAA,WAAW,EAAEX,WAAW,CAACY,WAAZ;AADT,KAQW;;AAAA,SAkBnBC,SAlBmB,GAkBP,MAAK;AACb,aAAOT,WAAW,CAACH,YAAY,CAAC,KAAKS,KAAL,CAAWC,WAAX,CAAuBG,iBAAvB,EAAD,CAAb,CAAlB;AACH,KApBkB;;AAAA,SAsBnBC,mBAtBmB,GAsBIJ,WAAD,IAAiB;AACnC,WAAKK,QAAL,CAAc;AACVL,QAAAA;AADU,OAAd;AAGH,KA1BkB;;AAEf,UAAMM,IAAI,GAAG,KAAKR,KAAL,CAAWS,MAAxB;;AACA,QAAGD,IAAH,EAAQ;AACJ,YAAME,YAAY,GAAGd,WAAW,CAACY,IAAD,CAAhC;AACA,YAAMG,YAAY,GAAGlB,YAAY,CAACmB,oBAAb,CAAkCF,YAAY,CAACG,aAA/C,CAArB;AACA,YAAMX,WAAW,GAAGX,WAAW,CAACuB,iBAAZ,CAA8BH,YAA9B,CAApB;AACA,WAAKV,KAAL,GAAa;AACTC,QAAAA;AADS,OAAb;AAGH,KAPD,MAOK;AACD,WAAKD,KAAL,GAAa;AACTC,QAAAA,WAAW,EAAEX,WAAW,CAACY,WAAZ;AADJ,OAAb;AAGH;AAEJ;;AAYDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,WACQ,oBAAC,MAAD;AACI,MAAA,WAAW,EAAEC,WADjB;AAEI,MAAA,WAAW,EAAE;AAACc,QAAAA,MAAM,EAAC,iBAAR;AAA0BC,QAAAA,SAAS,EAAC,GAApC;AAAwCC,QAAAA,WAAW,EAAC;AAApD,OAFjB;AAGI,MAAA,mBAAmB,EAAE,KAAKZ,mBAH9B;AAII,MAAA,OAAO,EAAE;AACLa,QAAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAC,KAAKC,mBAAtB;AAA0CC,UAAAA,GAAG,EAAC;AAACC,YAAAA,OAAO,EAAC,IAAT;AAAcC,YAAAA,SAAS,EAAC;AAAxB;AAA9C;AADF,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAUH;;AAjDkD;AAAjC1B,c,CAKX2B,S,GAAY;AACfhB,EAAAA,MAAM,EAACZ,SAAS,CAAC6B;AADF,C","sourcesContent":["import React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport PropTypes from \"prop-types\"\n\nexport default  class RichTextEditor extends Component {\n    state = {\n        editorState: EditorState.createEmpty(),\n    }\n\n    static propTypes = {\n        detail:PropTypes.string\n    }\n\n    constructor(props) {\n        super(props);\n        const html = this.props.detail;\n        if(html){\n            const contentBlock = htmlToDraft(html);\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            const editorState = EditorState.createWithContent(contentState);\n            this.state = {\n                editorState,\n            };\n        }else{\n            this.state = {\n                editorState: EditorState.createEmpty(),\n            }\n        }\n\n    }\n\n    getDetail = () =>{\n        return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\n    }\n\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n    render() {\n        const { editorState } = this.state;\n        return (\n                <Editor\n                    editorState={editorState}\n                    editorStyle={{border:'1px solid black',minHeight:200,paddingLeft:10 }}\n                    onEditorStateChange={this.onEditorStateChange}\n                    toolbar={{\n                        image: { uploadCallback:this.uploadImageCallback,alt:{present:true,mandatory:true} },\n                    }}\n                />\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}