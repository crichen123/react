{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/cascader/style/css\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/pages/product/add-update.jsx\";\nimport React from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport { reqCategorys } from \"../../api\";\nconst {\n  Item\n} = _Form;\nconst {\n  TextArea\n} = _Input;\nconst options = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  isLeaf: false\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  isLeaf: false\n}, {\n  value: 'jiangsu2',\n  label: 'Jiangsu2',\n  isLeaf: true\n}];\n\nclass ProductAddUpdate extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      options: []\n    };\n\n    this.submit = () => {\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"ok\");\n        }\n      });\n    };\n\n    this.validattorPrice = (rule, value, callback) => {\n      if (value * 1 > 0) {\n        callback();\n      } else {\n        callback(\"价格格式不对\");\n      }\n    };\n\n    this.getCategory = async parentId => {\n      const result = await reqCategorys(parentId);\n\n      if (result.data.status === 0) {\n        const categorys = result.data.data;\n        this.initOptions(categorys);\n      }\n    };\n\n    this.initOptions = catagerys => {\n      const options = catagerys.map(c => ({\n        value: c._id,\n        label: c.name,\n        isLeaf: false\n      }));\n      this.setState({\n        options\n      });\n    };\n\n    this.loadData = selectedOptions => {\n      const targetOption = selectedOptions[0];\n      targetOption.loading = true;\n      setTimeout(() => {\n        targetOption.loading = false;\n        targetOption.children = [{\n          label: `${targetOption.label} Dynamic 1`,\n          value: 'dynamic1'\n        }, {\n          label: `${targetOption.label} Dynamic 2`,\n          value: 'dynamic2'\n        }];\n        this.setState({\n          options: [...this.state.options]\n        });\n      }, 1000);\n    };\n  }\n\n  componentDidMount() {\n    this.getCategory('0');\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const title = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(LinkButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"arrow-left\",\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\\u6DFB\\u52A0\\u5546\\u54C1\"));\n    const formItemLayout = {\n      labelCol: {\n        span: 2\n      },\n      wrapperCol: {\n        span: 8\n      }\n    };\n    return React.createElement(_Card, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u540D\\u79F0:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: \"请输入商品名称\"\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u63CF\\u8FF0:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, getFieldDecorator('desc', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: \"请输入商品描述\"\n      }]\n    })(React.createElement(TextArea, {\n      placeholder: \"\\u5546\\u54C1\\u63CF\\u8FF0\",\n      autoSize: {\n        minRows: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u4EF7\\u683C:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, getFieldDecorator('price', {\n      initialValue: '',\n      rules: [{\n        required: true,\n        message: \"请输入商品描述\"\n      }, {\n        validator: this.validattorPrice\n      }]\n    })(React.createElement(_Input, {\n      type: \"number\",\n      addonAfter: \"\\u5143\",\n      placeholder: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u5206\\u7C7B:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"\\u5546\\u54C1\\u5206\\u7C7B\")), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u5206\\u7C7B:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(_Cascader, {\n      options: this.state.options,\n      loadData: this.loadData,\n      onChange: this.onChange,\n      changeOnSelect: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u5206\\u7C7B:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"\\u5546\\u54C1\\u8BE6\\u60C5\")), React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"))));\n  }\n\n}\n\nexport default _Form.create()(ProductAddUpdate);","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/product/add-update.jsx"],"names":["React","LinkButton","reqCategorys","Item","TextArea","options","value","label","isLeaf","ProductAddUpdate","Component","state","submit","props","form","validateFields","err","values","console","log","validattorPrice","rule","callback","getCategory","parentId","result","data","status","categorys","initOptions","catagerys","map","c","_id","name","setState","loadData","selectedOptions","targetOption","loading","setTimeout","children","componentDidMount","render","getFieldDecorator","title","fontSize","formItemLayout","labelCol","span","wrapperCol","initialValue","rules","required","message","minRows","validator","onChange","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card,Form,Input,Cascader,Upload,Button,Icon} from \"antd\"\nimport LinkButton from \"../../components/link-button\";\nimport {reqCategorys} from \"../../api\"\n\nconst {Item} = Form\nconst {TextArea} = Input\n\nconst options = [\n    {\n        value: 'zhejiang',\n        label: 'Zhejiang',\n        isLeaf: false,\n    },\n    {\n        value: 'jiangsu',\n        label: 'Jiangsu',\n        isLeaf: false,\n    },\n    {\n        value: 'jiangsu2',\n        label: 'Jiangsu2',\n        isLeaf: true,\n    },\n];\n\nclass ProductAddUpdate extends React.Component {\n\n    state = {\n        options:[],\n    };\n\n    submit = () =>{\n        this.props.form.validateFields((err,values)=>{\n            if(!err){\n                console.log(\"ok\")\n            }\n        })\n    }\n\n    validattorPrice = (rule,value,callback) =>{\n        if(value*1>0){\n            callback()\n        }else{\n            callback(\"价格格式不对\")\n        }\n\n    }\n\n    getCategory = async(parentId) =>{\n        const result  = await reqCategorys(parentId)\n        if(result.data.status ===0){\n            const categorys = result.data.data\n            this.initOptions(categorys)\n        }\n    }\n\n    initOptions =(catagerys) =>{\n       const options = catagerys.map(c=>({\n            value: c._id,\n            label: c.name,\n            isLeaf: false,\n        }))\n\n        this.setState({\n            options\n        })\n    }\n\n\n    loadData = selectedOptions => {\n        const targetOption = selectedOptions[0];\n        targetOption.loading = true;\n\n\n        setTimeout(() => {\n            targetOption.loading = false;\n            targetOption.children = [\n                {\n                    label: `${targetOption.label} Dynamic 1`,\n                    value: 'dynamic1',\n                },\n                {\n                    label: `${targetOption.label} Dynamic 2`,\n                    value: 'dynamic2',\n                },\n            ];\n            this.setState({\n                options: [...this.state.options],\n            });\n        }, 1000);\n    };\n\n\n    componentDidMount() {\n        this.getCategory('0')\n    }\n\n\n    render(){\n        const {getFieldDecorator } = this.props.form\n\n        const title = (\n            <span>\n                <LinkButton>\n                    <Icon type=\"arrow-left\" style={{fontSize:20}}/>\n                </LinkButton>\n                <span>添加商品</span>\n            </span>\n        )\n\n        const formItemLayout = {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 8},\n        };\n\n\n        return (\n            <Card title={title}>\n                <Form {...formItemLayout}>\n                    <Item label=\"商品名称:\">\n                        {\n                            getFieldDecorator('name',{\n                                initialValue:'',\n                                rules:[\n                                    {required:true,message:\"请输入商品名称\"}\n                                ]\n                            })(\n                                <Input placeholder=\"商品名称\"></Input>\n                            )\n                        }\n                    </Item>\n                    <Item label=\"商品描述:\">\n                        {\n                            getFieldDecorator('desc',{\n                                initialValue:'',\n                                rules:[\n                                    {required:true,message:\"请输入商品描述\"}\n                                ]\n                            })(\n                                <TextArea  placeholder=\"商品描述\" autoSize ={{minRows:2}} />\n                            )\n                        }\n\n                    </Item>\n                    <Item label=\"商品价格:\">\n                        {\n                            getFieldDecorator('price',{\n                                initialValue:'',\n                                rules:[\n                                    {required:true,message:\"请输入商品描述\"},\n                                    {validator:this.validattorPrice}\n                                ]\n                            })(\n                                <Input type=\"number\" addonAfter=\"元\" placeholder=\"商品价格\"></Input>\n                            )\n                        }\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        <div>商品分类</div>\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        <Cascader\n                            options={this.state.options}\n                            loadData={this.loadData}\n                            onChange={this.onChange}\n                            changeOnSelect\n                        />\n                    </Item>\n                    <Item label=\"商品分类:\">\n                        <div>商品详情</div>\n                    </Item>\n                    <Item>\n                        <Button type=\"primary\" onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\n\nexport default Form.create()(ProductAddUpdate);"]},"metadata":{},"sourceType":"module"}