{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/pages/product/home.jsx\";\nimport React from 'react';\nimport LinkButton from \"../../components/link-button\";\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from \"../../api\";\nimport { PAGE_SIZE } from \"../../utils/constant\";\nconst Option = _Select.Option;\nexport default class ProductHome extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      total: 0,\n      loading: false,\n      searchName: '',\n      searchType: 'productName'\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: '商品名称',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '商品描述',\n        dataIndex: 'desc',\n        key: 'age'\n      }, {\n        title: '价格',\n        dataIndex: 'price',\n        render: price => \"￥\" + price\n      }, {\n        width: 100,\n        title: '状态',\n        render: product => {\n          const {\n            status,\n            _id\n          } = product;\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, React.createElement(_Button, {\n            type: \"primary\",\n            onClick: () => this.updateStatus(status === 0 ? 1 : 0, _id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, status === 1 ? '下架' : '上架'), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, status === 1 ? '在售' : '已下架'));\n        }\n      }, {\n        width: 100,\n        title: '操作',\n        render: product => {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(LinkButton, {\n            onClick: () => this.props.history.push(\"/product/detail\", product),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, \"\\u8BE6\\u60C5\"), React.createElement(LinkButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"\\u4FEE\\u6539\"));\n        }\n      }];\n    };\n\n    this.updateStatus = async (status, _id) => {\n      const result = await reqUpdateStatus(_id, status);\n\n      if (result.data.status === 0) {\n        _message.success(\"更新成功\");\n\n        this.getProducts(this.pageNum);\n      }\n    };\n\n    this.getProducts = async pageNum => {\n      this.pageNum = pageNum;\n      this.setState({\n        loading: true\n      });\n      const {\n        searchName,\n        searchType\n      } = this.state;\n      let result;\n\n      if (searchName) {\n        result = await reqSearchProducts({\n          pageNum,\n          pageSize: PAGE_SIZE,\n          searchName,\n          searchType\n        });\n      } else {\n        result = await reqProducts(pageNum, PAGE_SIZE);\n      }\n\n      this.setState({\n        loading: false\n      });\n      console.log(result.data);\n\n      if (result.data.status === 0) {\n        const {\n          total,\n          list\n        } = result.data.data;\n        this.setState({\n          total,\n          products: list\n        });\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.getProducts(1);\n  }\n\n  render() {\n    const {\n      products,\n      total,\n      loading,\n      searchName,\n      searchType\n    } = this.state;\n    const title = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(_Select, {\n      value: searchType,\n      style: {\n        width: 150\n      },\n      onChange: value => this.setState({\n        searchType: value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"productName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\u6309\\u540D\\u79F0\\u641C\\u7D22\"), React.createElement(Option, {\n      value: \"productDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\u6309\\u63CF\\u8FF0\\u641C\\u7D22\")), React.createElement(_Input, {\n      placeholder: \"\\u5173\\u952E\\u5B57\",\n      style: {\n        width: 150,\n        margin: '0 15px'\n      },\n      value: searchName,\n      onChange: event => this.setState({\n        searchName: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(_Button, {\n      type: \"primary\",\n      onClick: () => this.getProducts(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\u641C\\u7D22\"));\n    const extra = React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), \"\\u6DFB\\u52A0\\u5546\\u54C1\");\n    return React.createElement(_Card, {\n      title: title,\n      extra: extra,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      rowKey: \"_id\",\n      loadding: loading,\n      dataSource: products,\n      pagination: {\n        total: total,\n        defaultPageSize: PAGE_SIZE,\n        onChange: this.getProducts\n      },\n      columns: this.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), \";\");\n  }\n\n}","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/product/home.jsx"],"names":["React","LinkButton","reqProducts","reqSearchProducts","reqUpdateStatus","PAGE_SIZE","Option","ProductHome","Component","state","products","total","loading","searchName","searchType","initColumns","columns","title","dataIndex","key","render","price","width","product","status","_id","updateStatus","props","history","push","result","data","success","getProducts","pageNum","setState","pageSize","console","log","list","componentWillMount","componentDidMount","value","margin","event","target","extra","defaultPageSize","onChange"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Table,Card,Select,Input,Button,Icon,message} from \"antd\"\nimport LinkButton from \"../../components/link-button\";\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from \"../../api\";\nimport {PAGE_SIZE} from \"../../utils/constant\";\n\nconst Option = Select.Option;\n\nexport default class ProductHome extends React.Component {\n\n    state = {\n        products:[],\n        total:0,\n        loading:false,\n        searchName:'',\n        searchType:'productName'\n\n    }\n\n    initColumns = () =>{\n        this.columns = [\n            {\n                title: '商品名称',\n                dataIndex: 'name',\n                key: 'name',\n            },\n            {\n                title: '商品描述',\n                dataIndex: 'desc',\n                key: 'age',\n            },\n            {\n                title: '价格',\n                dataIndex: 'price',\n                render: (price)=>\"￥\"+price,\n            }, {\n                width:100,\n                title: '状态',\n                render: (product)=>{\n                    const {status,_id} = product\n                    return (\n                        <span>\n                            <Button\n                                type=\"primary\"\n                                onClick={()=>this.updateStatus(status===0?1:0,_id)}\n                            >\n                                {status===1?'下架':'上架'}\n                            </Button>\n                        <span>{status===1?'在售':'已下架'}</span>\n                    </span>)\n                },\n            },{\n                width:100,\n                title: '操作',\n                render: (product)=>{\n                    return (\n                        <span>\n                            <LinkButton onClick={()=>this.props.history.push(\"/product/detail\",product)}>详情</LinkButton>\n                            <LinkButton>修改</LinkButton>\n                    </span>)\n                },\n            },\n        ];\n    }\n\n    updateStatus = async(status,_id)=>{\n        const result = await reqUpdateStatus(_id,status);\n        if(result.data.status===0){\n            message.success(\"更新成功\")\n            this.getProducts(this.pageNum)\n        }\n    }\n\n    getProducts = async(pageNum) =>{\n        this.pageNum = pageNum;\n        this.setState({loading:true})\n        const {searchName,searchType} = this.state\n        let result;\n        if(searchName){\n             result = await  reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType})\n        }else{\n            result = await reqProducts(pageNum,PAGE_SIZE);\n        }\n\n        this.setState({loading:false})\n        console.log(result.data);\n        if(result.data.status === 0){\n            const {total,list} = result.data.data;\n            this.setState({\n                total,\n                products:list\n            })\n        }\n    }\n\n    componentWillMount() {\n        this.initColumns()\n    }\n\n    componentDidMount() {\n        this.getProducts(1)\n    }\n\n    render(){\n        const {products,total,loading,searchName,searchType} = this.state;\n\n        const title = (\n            <span>\n                <Select value={searchType} style={{width:150}} onChange={value=>this.setState({searchType: value})}>\n                    <Option value=\"productName\">按名称搜索</Option>\n                    <Option value=\"productDesc\">按描述搜索</Option>\n                </Select>\n                <Input placeholder=\"关键字\"\n                       style={{width:150,margin:'0 15px'}}\n                       value={searchName}\n                       onChange={event=>this.setState({searchName:event.target.value})} />\n                <Button type=\"primary\" onClick={()=>this.getProducts(1)}>搜索</Button>\n            </span>);\n\n        const extra = (<Button type=\"primary\">\n            <Icon type=\"plus\"></Icon>\n            添加商品\n        </Button>);\n\n\n\n\n\n        return (\n            <Card title={title} extra={extra}>\n                <Table\n                    bordered\n                    rowKey=\"_id\"\n                    loadding={loading}\n                    dataSource={products}\n                    pagination={\n                        {\n                            total:total,\n                            defaultPageSize:PAGE_SIZE,\n                            onChange:this.getProducts\n                        }\n                    }\n                    columns={this.columns} />;\n            </Card>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}