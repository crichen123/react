{"ast":null,"code":"import \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/pages/user/user.jsx\";\nimport React from 'react';\nimport { PAGE_SIZE } from \"../../utils/constant\";\nimport { formateDate } from \"../../utils/dateUtils\";\nimport LinkButton from \"../../components/link-button\";\nimport AddForm from \"../role/add-form\";\nimport { reqGetUsers } from \"../../api\";\nexport default class User extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      users: [],\n      roles: [],\n      isShow: false\n    };\n\n    this.initColumn = () => {\n      this.columns = [{\n        title: '用户明',\n        dataIndex: \"usernamne\"\n      }, {\n        title: \"邮箱\",\n        dataIndex: \"email\"\n      }, {\n        title: \"电话\",\n        dataIndex: \"phone\"\n      }, {\n        title: \"注册时间\",\n        dataIndex: \"create_time\",\n        render: formateDate\n      }, {\n        title: \"所属角色\",\n        dataIndex: \"role_id\",\n        render: role_id => this.state.roles.find(role => true).name\n      }, {\n        title: \"操作\",\n        render: user => React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(LinkButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\"), React.createElement(LinkButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"))\n      }];\n    };\n\n    this.addOrUPdateUser = () => {};\n\n    this.getUsers = async () => {\n      const result = await reqGetUsers();\n\n      if (result.status === 0) {\n        const {\n          users,\n          roles\n        } = result.data;\n        this.setState({\n          users,\n          roles\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.initColumn();\n    this.getUsers();\n  }\n\n  render() {\n    const title = React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u521B\\u5EFA\\u7528\\u6237\");\n    const {\n      loading,\n      users,\n      isShow\n    } = this.state;\n    return React.createElement(_Card, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      rowKey: \"_id\",\n      loadding: loading,\n      dataSource: users,\n      pagination: {\n        defaultPageSize: 5\n      },\n      columns: this.columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: \"\\u6DFB\\u52A0\\u7528\\u6237\",\n      visible: isShow,\n      onOk: this.addOrUPdateUser,\n      onCancel: () => this.setState({\n        isShow: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(AddForm, {\n      setForm: form => {\n        this.form = form;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/user/user.jsx"],"names":["React","PAGE_SIZE","formateDate","LinkButton","AddForm","reqGetUsers","User","Component","state","loading","users","roles","isShow","initColumn","columns","title","dataIndex","render","role_id","find","role","name","user","addOrUPdateUser","getUsers","result","status","data","setState","componentDidMount","defaultPageSize","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Model, Card, Button, Table, message, Modal} from \"antd\"\nimport {PAGE_SIZE} from \"../../utils/constant\";\nimport {formateDate} from \"../../utils/dateUtils\";\nimport LinkButton from \"../../components/link-button\";\nimport AddForm from \"../role/add-form\";\nimport {reqGetUsers} from \"../../api\"\n\nexport default class User extends React.Component {\n\n    state = {\n        loading:false,\n        users:[],\n        roles:[],\n        isShow:false\n    }\n\n    initColumn = ()=>{\n        this.columns = [{\n            title:'用户明',\n            dataIndex:\"usernamne\"\n        },{\n            title:\"邮箱\",\n            dataIndex: \"email\"\n        },{\n            title:\"电话\",\n            dataIndex: \"phone\"\n        },{\n            title:\"注册时间\",\n            dataIndex: \"create_time\",\n            render:formateDate\n        },{\n            title:\"所属角色\",\n            dataIndex: \"role_id\",\n            render:(role_id)=>this.state.roles.find(role=>true).name\n        },{\n            title:\"操作\",\n           render:(user)=>(\n            <span>\n                <LinkButton>修改</LinkButton>\n                <LinkButton>删除</LinkButton>\n            </span>\n           )\n        }\n        ]\n    }\n\n    addOrUPdateUser = () =>{}\n\n    getUsers = async() => {\n        const result = await reqGetUsers();\n        if(result.status === 0){\n            const {users,roles} = result.data\n            this.setState({\n                users,roles\n            })\n        }\n\n    }\n\n\n    componentDidMount() {\n        this.initColumn()\n        this.getUsers()\n    }\n\n    render(){\n        const title = (<Button type=\"primary\">创建用户</Button>);\n        const {loading,users,isShow} = this.state\n        return (\n\n            <Card title={title}>\n                <Table\n                    bordered\n                    rowKey=\"_id\"\n                    loadding={loading}\n                    dataSource={users}\n                    pagination={ {defaultPageSize:5} }\n                    columns={this.columns} />\n                <Modal\n                    title=\"添加用户\"\n                    visible={isShow}\n                    onOk={this.addOrUPdateUser}\n                    onCancel={()=>this.setState({isShow: false})}\n                >\n                    <AddForm  setForm={(form)=> {this.form = form} } />\n                </Modal>\n\n\n            </Card>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}