{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nvar _jsxFileName = \"/home/crc/WebstormProjects/react-admin/src/components/left-nav/left-nav.jsx\";\nimport React from 'react';\nimport \"./index.less\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport menuList from '../../config/menuConfig';\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport { connect } from \"react-redux\";\nimport { setHeaderTitle } from \"../../redux/actions\";\nconst {\n  SubMenu\n} = _Menu;\n\nclass LeftNav extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: false\n    };\n\n    this.getMenuNodes_map = menuList => {\n      return menuList.map(item => {\n        if (!item.children) {\n          return React.createElement(_Menu.Item, {\n            key: item.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: item.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26\n            },\n            __self: this\n          }, React.createElement(_Icon, {\n            type: item.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, item.title)));\n        } else {\n          return React.createElement(SubMenu, {\n            key: item.key,\n            title: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, React.createElement(_Icon, {\n              type: item.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            }, item.title)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, this.getMenuNodes(item.children));\n        }\n      });\n    };\n\n    this.hasAuth = item => {\n      const {\n        key,\n        isPublic\n      } = item;\n      const username = memoryUtils.user.username;\n      const {\n        menus\n      } = memoryUtils.user.role;\n\n      if (username === 'crc' || isPublic || menus.indexOf(key) !== -1) {\n        return true;\n      } else if (item.children) {\n        return !!item.children.find(child => menus.indexOf(child.key) !== -1);\n      }\n    };\n\n    this.getMenuNodes = menuList => {\n      const path = this.props.location.pathname;\n      return menuList.reduce((pre, item) => {\n        if (this.hasAuth(item)) {\n          if (!item.children) {\n            if (item.key === path || path.indexOf(item.key) === 0) {\n              this.props.setHeaderTitle(item.title);\n            }\n\n            pre.push(React.createElement(_Menu.Item, {\n              key: item.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: item.key,\n              onClick: () => this.props.setHeaderTitle(item.title),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, React.createElement(_Icon, {\n              type: item.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, item.title))));\n          } else {\n            const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0); // 如果存在, 说明当前item的子列表需要打开\n\n            if (cItem) {\n              this.openKey = item.key;\n            }\n\n            pre.push(React.createElement(SubMenu, {\n              key: item.key,\n              title: React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              }, React.createElement(_Icon, {\n                type: item.icon,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 86\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 87\n                },\n                __self: this\n              }, item.title)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, this.getMenuNodes(item.children)));\n          }\n        }\n\n        return pre;\n      }, []);\n    };\n  }\n\n  //第一次render之前 只执行一次\n  componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n\n  render() {\n    let path = this.props.location.pathname;\n    const openKey = this.openKey;\n\n    if (path.indexOf('/product') === 0) {\n      path = \"/product\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"left-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"left-nav-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        marginLeft: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"React\\u540E\\u53F0\")), React.createElement(_Menu, {\n      mode: \"inline\",\n      theme: \"dark\",\n      selectedKeys: [path],\n      defaultOpenKeys: [openKey],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.menuNodes));\n  }\n\n} //leftNav是非路由组件 withRouter传入location history match 属性\n\n\nexport default connect(state => ({}), {\n  setHeaderTitle\n})(withRouter(LeftNav));","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/components/left-nav/left-nav.jsx"],"names":["React","Link","withRouter","menuList","memoryUtils","connect","setHeaderTitle","SubMenu","LeftNav","Component","state","collapsed","getMenuNodes_map","map","item","children","key","icon","title","getMenuNodes","hasAuth","isPublic","username","user","menus","role","indexOf","find","child","path","props","location","pathname","reduce","pre","push","cItem","openKey","componentWillMount","menuNodes","render","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./index.less\"\nimport {Link,withRouter} from \"react-router-dom\"\nimport { Menu, Icon } from 'antd';\nimport menuList from '../../config/menuConfig'\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport {connect} from \"react-redux\"\nimport {setHeaderTitle} from \"../../redux/actions\"\n\nconst { SubMenu } = Menu;\n\n\n\nclass LeftNav extends React.Component{\n    state = {\n        collapsed: false,\n    };\n\n\n    //示例 使用map方法生成条目\n    getMenuNodes_map = (menuList) => {\n        return menuList.map(item=>{\n            if(!item.children){\n                return (\n                    <Menu.Item key={item.key}>\n                        <Link to={item.key}>\n                            <Icon type={item.icon} />\n                           <span>{item.title}</span>\n                        </Link>\n                    </Menu.Item>\n                )\n            }else{\n                return (\n                    <SubMenu\n                    key={item.key}\n                    title={\n                        <span>\n                            <Icon type={item.icon} />\n                            <span>{item.title}</span>\n                        </span>\n                    }>\n                       {this.getMenuNodes(item.children)}\n                    </SubMenu>\n\n                )\n            }\n        })\n    }\n\n    hasAuth = (item) =>{\n        const {key,isPublic} = item\n        const username = memoryUtils.user.username\n        const {menus} = memoryUtils.user.role\n        if(username ==='crc' || isPublic || menus.indexOf(key) !== -1 ){\n            return true\n        }else if(item.children){\n            return !!item.children.find(child=> menus.indexOf(child.key)!==-1)\n        }\n\n    }\n\n    getMenuNodes =(menuList) =>{\n        const path = this.props.location.pathname\n        return menuList.reduce((pre,item)=>{\n            if(this.hasAuth(item)) {\n                if (!item.children) {\n                    if(item.key === path || path.indexOf(item.key)===0){\n                        this.props.setHeaderTitle(item.title)\n                    }\n                    pre.push((<Menu.Item key={item.key}>\n                        <Link to={item.key} onClick={()=>this.props.setHeaderTitle(item.title)}>\n                            <Icon type={item.icon}/>\n                            <span>{item.title}</span>\n                        </Link>\n                    </Menu.Item>))\n                } else {\n                    const cItem = item.children.find(cItem => path.indexOf(cItem.key) === 0)\n                    // 如果存在, 说明当前item的子列表需要打开\n                    if (cItem) {\n                        this.openKey = item.key\n                    }\n                    pre.push((<SubMenu\n                        key={item.key}\n                        title={\n                            <span>\n                            <Icon type={item.icon}/>\n                            <span>{item.title}</span>\n                        </span>\n                        }>\n                        {this.getMenuNodes(item.children)}\n                    </SubMenu>))\n                }\n            }\n            return pre;\n        },[])\n    }\n\n    //第一次render之前 只执行一次\n    componentWillMount(){\n        this.menuNodes = this.getMenuNodes(menuList);\n    }\n    render() {\n        let path = this.props.location.pathname;\n        const openKey = this.openKey\n        if(path.indexOf('/product')===0){\n            path = \"/product\"\n        }\n        return (\n            <div   className=\"left-nav\">\n                <Link to=\"/\" className=\"left-nav-header\">\n                    <h1 style={{marginLeft:\"30px\"}}>React后台</h1>\n                </Link>\n                <Menu\n                    mode=\"inline\"\n                    theme=\"dark\"\n                    selectedKeys={[path]}\n                    defaultOpenKeys={[openKey]}\n                >\n                    {\n                        this.menuNodes\n                    }\n                </Menu>\n                {/*<Menu*/}\n                {/*    defaultSelectedKeys={['1']}*/}\n                {/*    defaultOpenKeys={['sub1']}*/}\n                {/*    mode=\"inline\"*/}\n                {/*    theme=\"dark\"*/}\n                {/*>*/}\n                {/*    <Menu.Item key=\"/home\">*/}\n                {/*            <Link to=\"/home\">*/}\n                {/*                <Icon type=\"pie-chart\" />*/}\n                {/*                <span>首页</span>*/}\n                {/*            </Link>*/}\n                {/*    </Menu.Item>*/}\n                {/*    <SubMenu*/}\n                {/*        key=\"sub1\"*/}\n                {/*        title={*/}\n                {/*            <span>*/}\n                {/*                <Icon type=\"mail\" />*/}\n                {/*                <span>商品</span>*/}\n                {/*            </span>*/}\n                {/*            }*/}\n                {/*        >*/}\n                {/*        <Menu.Item key=\"/category\">*/}\n                {/*            <Link to=\"/category\">*/}\n                {/*                <Icon type=\"mail\" />*/}\n                {/*                <span>品类管理</span>*/}\n                {/*            </Link>*/}\n                {/*        </Menu.Item>*/}\n                {/*        <Menu.Item key=\"/product\">*/}\n                {/*            <Link to=\"/product\">*/}\n                {/*                <Icon type=\"mail\" />*/}\n                {/*                <span>商品管理</span>*/}\n                {/*            </Link>*/}\n                {/*        </Menu.Item>*/}\n                {/*    </SubMenu>*/}\n                {/*    <Menu.Item key=\"/user\">*/}\n                {/*        <Link to=\"/user\">*/}\n                {/*            <Icon type=\"pie-chart\" />*/}\n                {/*            <span>用户管理</span>*/}\n                {/*        </Link>*/}\n                {/*    </Menu.Item>*/}\n                {/*    <Menu.Item key=\"/role\">*/}\n                {/*        <Link to=\"/role\">*/}\n                {/*            <Icon type=\"pie-chart\" />*/}\n                {/*            <span>角色管理</span>*/}\n                {/*        </Link>*/}\n                {/*    </Menu.Item>*/}\n\n                {/*</Menu>*/}\n            </div>\n        )\n    }\n}\n//leftNav是非路由组件 withRouter传入location history match 属性\nexport default connect(state=>({}),{setHeaderTitle})(withRouter(LeftNav))"]},"metadata":{},"sourceType":"module"}