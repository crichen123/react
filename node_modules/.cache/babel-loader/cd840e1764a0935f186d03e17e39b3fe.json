{"ast":null,"code":"import _classCallCheck from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Chart,Geom,Axis,Tooltip,Legend}from\"bizcharts\";import DataSet from\"@antv/data-set\";var Line=/*#__PURE__*/function(_React$Component){_inherits(Line,_React$Component);function Line(){_classCallCheck(this,Line);return _possibleConstructorReturn(this,_getPrototypeOf(Line).apply(this,arguments));}_createClass(Line,[{key:\"render\",value:function render(){var data=[{month:\"Jan\",a:7.0,b:3.9,c:5.9},{month:\"Feb\",a:6.9,b:4.2,c:1.9},{month:\"Mar\",a:9.5,b:5.7,c:3.9},{month:\"Apr\",a:14.5,b:8.5,c:5.5},{month:\"May\",a:18.4,b:11.9,c:8.9},{month:\"Jun\",a:21.5,b:15.2,c:10.0},{month:\"Jul\",a:25.2,b:17.0,c:12.9},{month:\"Aug\",a:26.5,b:16.6,c:15.9},{month:\"Sep\",a:23.3,b:14.2,c:20.7},{month:\"Oct\",a:18.3,b:10.3,c:25.9},{month:\"Nov\",a:13.9,b:6.6,c:30.9},{month:\"Dec\",a:9.6,b:4.8,c:35.9}];var ds=new DataSet();var dv=ds.createView().source(data);dv.transform({type:\"fold\",fields:[\"a\",\"b\",\"c\"],// 展开字段集\nkey:\"city\",// key字段\nvalue:\"temperature\"// value字段\n});var cols={month:{range:[0,1]}};return React.createElement(\"div\",{style:{float:'right',width:750,height:300}},React.createElement(Chart,{height:250,data:dv,scale:cols,forceFit:true},React.createElement(Legend,null),React.createElement(Axis,{name:\"month\"}),React.createElement(Axis,{name:\"temperature\",label:{formatter:function formatter(val){return\"\".concat(val,\"\\u4E07\\u4E2A\");}}}),React.createElement(Tooltip,{crosshairs:{type:\"y\"}}),React.createElement(Geom,{type:\"line\",position:\"month*temperature\",size:2,color:\"city\",shape:\"smooth\"}),React.createElement(Geom,{type:\"point\",position:\"month*temperature\",size:4,shape:\"circle\",color:\"city\",style:{stroke:\"#fff\",lineWidth:1}})));}}]);return Line;}(React.Component);export{Line as default};","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/home/line.jsx"],"names":["React","Chart","Geom","Axis","Tooltip","Legend","DataSet","Line","data","month","a","b","c","ds","dv","createView","source","transform","type","fields","key","value","cols","range","float","width","height","formatter","val","stroke","lineWidth","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}