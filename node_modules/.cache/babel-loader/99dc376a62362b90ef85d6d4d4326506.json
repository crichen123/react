{"ast":null,"code":"import\"antd/es/input/style/css\";import _Input from\"antd/es/input\";import _classCallCheck from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/crc/WebstormProjects/react-admin/node_modules/@babel/runtime/helpers/esm/inherits\";import\"antd/es/select/style/css\";import _Select from\"antd/es/select\";import\"antd/es/form/style/css\";import _Form from\"antd/es/form\";import React from\"react\";var Item=_Form.Item;var Option=_Select.Option;var UserForm=/*#__PURE__*/function(_React$PureComponent){_inherits(UserForm,_React$PureComponent);function UserForm(){_classCallCheck(this,UserForm);return _possibleConstructorReturn(this,_getPrototypeOf(UserForm).apply(this,arguments));}_createClass(UserForm,[{key:\"componentWillMount\",value:function componentWillMount(){this.props.setForm(this.props.form);}},{key:\"render\",value:function render(){var roles=this.props.roles;var user=this.props.user||{};var getFieldDecorator=this.props.form.getFieldDecorator;var formItemLayout={labelCol:{span:4},wrapperCol:{span:15}};return React.createElement(_Form,formItemLayout,React.createElement(Item,{label:\"\\u7528\\u6237\\u540D\"},getFieldDecorator('username',{initialValue:user.username,rules:[{required:true,message:'角色名称必须输入'}]})(React.createElement(_Input,{placeholder:\"\\u6E05\\u8F93\\u5165\\u89D2\\u8272\\u540D\\u79F0\"}))),user._id?null:React.createElement(Item,{label:\"\\u5BC6\\u7801\"},getFieldDecorator('password',{initialValue:user.password,rules:[{required:true,message:'密码必须输入'}]})(React.createElement(_Input,{type:\"password\",placeholder:\"\\u6E05\\u8F93\\u5165\\u5BC6\\u7801\"}))),React.createElement(Item,{label:\"\\u624B\\u673A\\u53F7\"},getFieldDecorator('phone',{initialValue:user.phone,rules:[{required:true,message:'手机号必须输入'}]})(React.createElement(_Input,{placeholder:\"\\u6E05\\u8F93\\u5165\\u624B\\u673A\\u53F7\"}))),React.createElement(Item,{label:\"\\u90AE\\u7BB1\"},getFieldDecorator('email',{initialValue:user.email,rules:[{required:true,message:'邮箱必须输入'}]})(React.createElement(_Input,{placeholder:\"\\u6E05\\u8F93\\u5165\\u90AE\\u7BB1\"}))),React.createElement(Item,{label:\"\\u89D2\\u8272\"},getFieldDecorator('role_id',{initialValue:user.role_id,rules:[{required:true,message:'角色必须输入'}]})(React.createElement(_Select,null,roles.map(function(role){return React.createElement(Option,{key:role._id,value:role._id},role.name);})))));}}]);return UserForm;}(React.PureComponent);export default _Form.create()(UserForm);","map":{"version":3,"sources":["/home/crc/WebstormProjects/react-admin/src/pages/user/user-form.jsx"],"names":["React","Item","Option","UserForm","props","setForm","form","roles","user","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","initialValue","username","rules","required","message","_id","password","phone","email","role_id","map","role","name","PureComponent","create"],"mappings":"izBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAIA,GAAMC,CAAAA,IAAI,CAAG,MAAKA,IAAlB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAAOA,MAAtB,C,GAEMC,CAAAA,Q,sTASmB,CACjB,KAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,IAA9B,EACH,C,uCAIO,IACGC,CAAAA,KADH,CACY,KAAKH,KADjB,CACGG,KADH,CAEJ,GAAMC,CAAAA,IAAI,CAAG,KAAKJ,KAAL,CAAWI,IAAX,EAAmB,EAAhC,CAFI,GAGGC,CAAAA,iBAHH,CAGwB,KAAKL,KAAL,CAAWE,IAHnC,CAGGG,iBAHH,CAKJ,GAAMC,CAAAA,cAAc,CAAG,CACnBC,QAAQ,CAAE,CAAEC,IAAI,CAAE,CAAR,CADS,CAEnBC,UAAU,CAAE,CAAED,IAAI,CAAE,EAAR,CAFO,CAAvB,CAKA,MACI,2BAAUF,cAAV,CACI,oBAAC,IAAD,EAAM,KAAK,CAAC,oBAAZ,EAEQD,iBAAiB,CAAC,UAAD,CAAY,CACzBK,YAAY,CAACN,IAAI,CAACO,QADO,CAEzBC,KAAK,CAAC,CACF,CAACC,QAAQ,CAAC,IAAV,CAAeC,OAAO,CAAC,UAAvB,CADE,CAFmB,CAAZ,CAAjB,CAME,4BAAO,WAAW,CAAC,4CAAnB,EANF,CAFR,CADJ,CAaMV,IAAI,CAACW,GAAL,CAAW,IAAX,CAAmB,oBAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,EAEbV,iBAAiB,CAAC,UAAD,CAAY,CACzBK,YAAY,CAACN,IAAI,CAACY,QADO,CAEzBJ,KAAK,CAAC,CACF,CAACC,QAAQ,CAAC,IAAV,CAAeC,OAAO,CAAC,QAAvB,CADE,CAFmB,CAAZ,CAAjB,CAMI,4BAAO,IAAI,CAAC,UAAZ,CAAuB,WAAW,CAAC,gCAAnC,EANJ,CAFa,CAbzB,CA0BI,oBAAC,IAAD,EAAM,KAAK,CAAC,oBAAZ,EAEQT,iBAAiB,CAAC,OAAD,CAAS,CACtBK,YAAY,CAACN,IAAI,CAACa,KADI,CAEtBL,KAAK,CAAC,CACF,CAACC,QAAQ,CAAC,IAAV,CAAeC,OAAO,CAAC,SAAvB,CADE,CAFgB,CAAT,CAAjB,CAMI,4BAAO,WAAW,CAAC,sCAAnB,EANJ,CAFR,CA1BJ,CAsCI,oBAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,EAEQT,iBAAiB,CAAC,OAAD,CAAS,CACtBK,YAAY,CAACN,IAAI,CAACc,KADI,CAEtBN,KAAK,CAAC,CACF,CAACC,QAAQ,CAAC,IAAV,CAAeC,OAAO,CAAC,QAAvB,CADE,CAFgB,CAAT,CAAjB,CAMI,4BAAO,WAAW,CAAC,gCAAnB,EANJ,CAFR,CAtCJ,CAkDI,oBAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,EAEQT,iBAAiB,CAAC,SAAD,CAAW,CACxBK,YAAY,CAACN,IAAI,CAACe,OADM,CAExBP,KAAK,CAAC,CACF,CAACC,QAAQ,CAAC,IAAV,CAAeC,OAAO,CAAC,QAAvB,CADE,CAFkB,CAAX,CAAjB,CAMI,iCAEQX,KAAK,CAACiB,GAAN,CAAU,SAAAC,IAAI,QAAG,qBAAC,MAAD,EAAQ,GAAG,CAAEA,IAAI,CAACN,GAAlB,CAAuB,KAAK,CAAEM,IAAI,CAACN,GAAnC,EAAyCM,IAAI,CAACC,IAA9C,CAAH,EAAd,CAFR,CANJ,CAFR,CAlDJ,CADJ,CAqEH,C,sBA9FkB1B,KAAK,CAAC2B,a,EAgG7B,cAAe,OAAKC,MAAL,GAAczB,QAAd,CAAf","sourcesContent":["import React from \"react\";\nimport {Form,Select,Input} from \"antd\"\nimport PropTypes from \"prop-types\"\n\nconst Item = Form.Item\nconst Option = Select.Option\n\nclass UserForm extends React.PureComponent{\n\n    static propTypes = {\n        roles:PropTypes.array.isRequired,\n        setForm:PropTypes.func.isRequired,\n        user:PropTypes.object\n    }\n\n\n    componentWillMount() {\n        this.props.setForm(this.props.form)\n    }\n\n\n\n    render(){\n        const {roles} = this.props\n        const user = this.props.user || {}\n        const {getFieldDecorator} = this.props.form\n\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 15},\n        };\n\n        return (\n            <Form {...formItemLayout}>\n                <Item label=\"用户名\">\n                    {\n                        getFieldDecorator('username',{\n                            initialValue:user.username,\n                            rules:[\n                                {required:true,message:'角色名称必须输入'}\n                            ]\n                        })(\n                          <Input placeholder=\"清输入角色名称\" />\n                        )}\n\n                </Item>\n                { user._id ? null:   <Item label=\"密码\">\n                    {\n                        getFieldDecorator('password',{\n                            initialValue:user.password,\n                            rules:[\n                                {required:true,message:'密码必须输入'}\n                            ]\n                        })(\n                            <Input type=\"password\" placeholder=\"清输入密码\" />\n                        )}\n\n                </Item>}\n\n                <Item label=\"手机号\">\n                    {\n                        getFieldDecorator('phone',{\n                            initialValue:user.phone,\n                            rules:[\n                                {required:true,message:'手机号必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"清输入手机号\" />\n                        )}\n\n                </Item>\n                <Item label=\"邮箱\">\n                    {\n                        getFieldDecorator('email',{\n                            initialValue:user.email,\n                            rules:[\n                                {required:true,message:'邮箱必须输入'}\n                            ]\n                        })(\n                            <Input placeholder=\"清输入邮箱\" />\n                        )}\n\n                </Item>\n                <Item label=\"角色\">\n                    {\n                        getFieldDecorator('role_id',{\n                            initialValue:user.role_id,\n                            rules:[\n                                {required:true,message:'角色必须输入'}\n                            ]\n                        })(\n                            <Select>\n                                {\n                                    roles.map(role=> <Option key={role._id} value={role._id}>{role.name}</Option>)\n                                }\n\n                            </Select>\n                        )}\n                </Item>\n            </Form>\n        )\n    }\n}\nexport default Form.create()(UserForm)"]},"metadata":{},"sourceType":"module"}